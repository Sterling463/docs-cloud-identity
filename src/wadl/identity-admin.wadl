<?xml version="1.0" encoding="UTF-8"?>
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entites with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent identity-admin.wadl             -->
<!--*******************************************************-->
<!DOCTYPE application [
    <!ENTITY % common  SYSTEM "../common/common.ent">
    %common;
]>

<application 
    xmlns="http://wadl.dev.java.net/2009/02" xmlns:wadl="http://wadl.dev.java.net/2009/02"
    xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
    xmlns:vers="http://docs.openstack.org/common/api/v1.0"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
    xmlns:capi="http://docs.openstack.org/common/api/v1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
    xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../xsd/api.xsd
		http://docs.openstack.org/common/api/v1.0 ../xsd/api-common.xsd
		">

    <grammars>
        <include href="../common/xsd/api.xsd"/>
        <include href="../common/xsd/api-common.xsd"/>
        <include href="../common/xsd/RAX-AUTH.xsd"/>
    </grammars>

    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->

    <!-- We should use SSL in production -->
    <resources base="http://localhost:35357" xml:id="Identity">
        
       <resource id="tokens" path="tokens">
                <method href="#authenticate"/>
                <resource id="tokenById" path="{tokenId}">
                    <param name="tokenId" style="template" type="capi:UUID" required="true">
                        <doc>A unique Required. The token ID.</doc>
                    </param>
                    <param name="belongsTo" style="query" required="false" type="xsd:string">
                        <doc xml:lang="EN">
                            <p xmlns="http://www.w3.org/1999/xhtml">
                            Validates that a token has the specified tenant in scope, for performance. Valid tokens 
                            are in the <code>/tokens/{tokenId}</code> path. An <code>itemNotFound</code> 
                            (<code>404</code>) fault is returned for a token that is not valid.
                        </p>
                        </doc>
                    </param>
                        <method href="#revokeToken"/>
                        <method href="#validateToken"/>
                        <method href="#checkToken"/>
                        <resource id="endpointsForToken" path="endpoints">
                            <method href="#listEndpointsForToken"/>
                    </resource>
                </resource>
            </resource>

            <resource id="users" path="users">
                <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
                    <doc>
                         A valid authentication token for an adminiistrative user. The token string  
                         is generated and returned by the authentication service in response to valid
                        credentials.
                    </doc>
                </param>
                <resource id="name" path="{name}">
                    <method href="#getUserByName"/>
                </resource>
                <resource id="email">
                    <param name="email" style="query" type="xsd:string"
                        required="true">
                        <doc xml:lang="EN">The email address associated with an account.</doc>
                    </param>
                    <method href="#getUserByEmail"/>
                </resource>
                <resource id="userid" path="{user_id}">
                    <param name="user_id" style="query" type="xsd:string" required="true">
                    <doc>The user ID.</doc>
                    </param>
                    <method href="#getUserById"/>

                    <resource id="userRoles" path="roles">
                        <method href="#listUserGlobalRoles"/>
                    </resource>
                </resource>
            </resource>

             <resource id="tenants" path="tenants">
                <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
                    <doc>A valid authentication token for an admiinistrative user.
                    </doc>
                </param>
                <method href="#listTenants"/>
                <method href="#getTenantByName"/>
                  <resource id="tenantById" path="{tenantId}">
                    <param name="tenantId" style="template"
                        type="xsd:string" required="true">
                        <doc xml:lang="EN">The tenant ID.</doc>
                    </param>
                    <method href="#getTenantById"/>
                    <resource id="usersForTenant" path="users">
                        <resource id="getTenantUser" path="{userId}">
                            <param name="userId" style="template" type="xsd:string" required="true">
                            <doc xml:lang="EN">
                                <p xmlns="http://www.w3.org/1999/xhtml"> The user id ID.</p>
                            </doc>
                            </param>
                            <resource id="userRolesForTenant" path="roles">
                                <method href="#listRolesForUserOnTenant"/>
                            </resource>
                        </resource>
                    </resource>
                  </resource>
            </resource>
    </resources>

    <!--*******************************************************-->
    <!--               Resource Types                          -->
    <!--*******************************************************-->

 

    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->

   

    <!-- Token Operations -->
    
        <method name="POST" id="authenticate">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Authenticate">
                <para role="shortdesc">Authenticates and generates a
                    token.</para>
            <para>The &CIS; is a ReSTful web service that provides authentication services  
                for the &CLOUD;. To gain access, users and administrators can use this POST operation 
                to obtain an authentication token from the &CIS;, or generate a new token after a previously 
                issued token has expired. In subsequent requests to &CIS; or other services, 
                you include the authentication token in the HTTP x-header parameter defined as 
                <literal>X-Auth-Token</literal> to verify your identity and confirm access rights and privileges.
            </para>
            <para>
                Submit the POST token authentication request to the &CIS; service endpoint URL with v2.0/tokens 
                supplied as the path and a payload of credentials in the body. Credentials can include any of the following 
                types:
            </para>
            
            <itemizedlist spacing="compact">
                <listitem>
                    <para>username and API key</para>
                </listitem>
                <listitem>
                    <para>username, API key, and tenant ID</para>
                </listitem>
                <listitem>
                    <para>username, API key, and tenant name </para>
                </listitem>
                <listitem>
                    <para>username and password </para>
                </listitem>
                <listitem>
                    <para>username, password and tenant ID </para>
                </listitem>
                <listitem>
                    <para>username, password and tenant name </para>
                </listitem>
                <listitem>
                    <para>token and tenant ID </para>
                </listitem>
            </itemizedlist>
            
            <para>
                You can use whichever valid credentials you prefer. 
                Unless you specify a tenant, the response from the Identity service is not 
                affected by the type of credentials that you use.</para>
            <important>
                <para>
                    If you specify a tenant, the <code>Service Catalog</code> returned includes only
                    endpoints for the cloud services authorized for that tenant.
                </para>
            </important>  
            
            <para>See the following examples to learn about authenticating with different credential types.</para>
        </wadl:doc>
        <request>
            <param name="tenantName" style="plain" required="false"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The tenant name. Both the
                        <code>tenantId</code> and
                        <code>tenantName</code> attributes are
                        optional, but should not be specified
                        together. If both attributes are specified,
                        the server responds with a <code>400</code>
                        <code>Bad Request</code>.</para></wadl:doc>
            </param>
            <param name="tenantId" style="plain" required="false"
                type="capi:UUID">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The tenant ID. Both the
                        <code>tenantId</code> and
                        <code>tenantName</code> attributes are
                        optional, but should not be specified
                        together. If both attributes are specified,
                        the server responds with a <code>400</code>
                        <code>Bad Request</code>.</para></wadl:doc>
            </param>
            <param name="passwordCredentials" style="plain"
                required="false" type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A <code>passwordCredentials</code>
                        object. To authenticate, you must provide
                        either a user ID and password or a
                        token.</para></wadl:doc>
            </param>
            <param name="username" style="plain" required="false"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The user name. Required if you include
                        the <code>passwordCredentials</code> object.
                        If you do not provide password credentials,
                        you must provide a token.</para></wadl:doc>
            </param>
            <param name="password" style="plain" required="false"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The password of the user. Required if
                        you include the
                        <code>passwordCredentials</code> object.
                        If you do not provide a password credentials,
                        you must provide a token.</para></wadl:doc>
            </param>
            <param name="token" style="plain" required="false"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A <code>token</code> object. Required
                        if you do not provide password
                        credentials.</para></wadl:doc>
            </param>
            <param name="id" style="plain" required="false"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The token ID. This is a required field
                        in the <code>token</code>
                        object.</para></wadl:doc>
            </param>
            <representation mediaType="application/xml" element="identity:auth">
                <doc>  
                <xsdxt:sample title="Authenticate (with Username and API Key Credentials) Request: XML">
                        <xsdxt:code href="../common/samples/auth_with_apikey.xml"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Username, API Key, and Tenant ID Credentials) Request: XML">
                        <xsdxt:code href="../common/samples/auth_with_apikey_tenantId.xml"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Username and Password Credentials) Request: XML">
                        <xsdxt:code href="../common/samples/auth_credentials.xml"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Username, Password, and Tenant ID Credentials) Request: XML">
                        <xsdxt:code href="../common/samples/auth_credentials_tenantId.xml"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Tenant ID and Token Credentials) Request: XML">
                        <xsdxt:code href="../common/samples/auth_with_token_tenantId.xml"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Tenant Name and Token Credentials) Request: XML">
                        <xsdxt:code href="../common/samples/auth_with_token_tenantName.xml"/>
                    </xsdxt:sample>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:sample title="Authenticate (with Username and API Key Credentials) Request: JSON">
                        <xsdxt:code href="../common/samples/auth_with_apikey.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Username, API Key, and Tenant ID Credentials) Request: JSON">
                        <xsdxt:code href="../common/samples/auth_with_apikey_tenantId.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Username and Password Credentials) Request: JSON">
                        <xsdxt:code href="../common/samples/auth_credentials.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Username, Password, and Tenant ID Credentials) Request: JSON">
                        <xsdxt:code href="../common/samples/auth_credentials_tenantId.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Tenant ID and Token Credentials) Request: JSON">
                        <xsdxt:code href="../common/samples/auth_with_token_tenantId.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate (with Tenant Name and Token Credentials) Request: JSON">
                        <xsdxt:code href="../common/samples/auth_with_token_tenantName.json"/>
                    </xsdxt:sample>
                </doc>
            </representation>
        </request>
        <response status="200 203">
            <param name="access" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>An <code>access</code>
                        object.</para></wadl:doc>
            </param>
            <param name="token" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A <code>token</code>
                        object.</para></wadl:doc>
            </param>
            <param name="issued_at" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A timestamp that indicates when the
                        token was issued.</para></wadl:doc>
            </param>
            <param name="expires" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A timestamp that indicates when the
                        token expires.</para></wadl:doc>
            </param>
            <param name="id" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The authentication token. In the
                        example, the token is
                        <code>my_id</code>.</para></wadl:doc>
            </param>
            <param name="tenant" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A <code>tenant</code>
                        object.</para></wadl:doc>
            </param>
            <param name="description" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The description of the tenant. If not
                        set, this value is
                        <code>null</code>.</para></wadl:doc>
            </param>
            <param name="enabled" style="plain" required="true"
                type="xsd:boolean">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>Indicates whether the tenant is enabled
                        or disabled.</para></wadl:doc>
            </param>
            <param name="id" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The tenant ID.</para></wadl:doc>
            </param>
            <param name="name" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>The tenant name.</para></wadl:doc>
            </param>
            <param name="serviceCatalog" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A <code>serviceCatalog</code>
                        object.</para></wadl:doc>
            </param>
            <param name="endpoints" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>One or more <code>endpoints</code>
                        objects. Each object shows the
                        <code>adminURL</code>,
                        <code>region</code>, <code>internalURL</code>,
                        <code>id</code>, and
                        <code>publicURL</code> for the
                        endpoint.</para></wadl:doc>
            </param>
            <param name="endpoints_links" style="plain"
                required="true" type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>Links for the
                        endpoint.</para></wadl:doc>
            </param>
            <param name="type" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>Endpoint type.</para></wadl:doc>
            </param>
            <param name="name" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>Endpoint name.</para></wadl:doc>
            </param>
            <param name="user" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A <code>user</code> object, which shows
                        the <code>username</code>,
                        <code>roles_links</code>, <code>id</code>,
                        <code>roles</code>, and
                        <code>name</code>.</para></wadl:doc>
            </param>
            <param name="metadata" style="plain" required="true"
                type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    ><para>A <code>metadata</code>
                        object.</para></wadl:doc>
            </param>
            <representation mediaType="application/xml" element="identity:access">
                <!-- Note: WADLs generally get samples from /common/samples/ while the rest of the book gets samples from /docbkx/samples/ -->
                <!-- tired of trying to maintain synch between /common/samples/auth.xml & .json and /docbkx/samples/auth-annotated.xml & .json -->
                <!-- (showing same sample responses in Ch 3 & Ch 4, annotated with callouts in Ch 3 only) -->
                <!-- for these 2 samples only, this Ch 4 WADL reuses the samples shown in Ch3 -->
                <!-- now I can stop losing synch -->     
            <doc>        
                    <xsdxt:sample title="Authentication Response: XML">
                        <xsdxt:code href="../docbkx/samples/auth-annotated.xml"/>
                    </xsdxt:sample>               
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:sample title="Authentication Response: JSON">
                        <xsdxt:code href="../docbkx/samples/auth-annotated.json"/>
                    </xsdxt:sample>
                    <p xmlns="http://www.w3.org/1999/xhtml"> For more detailed information about authentication requests and responses with 
                        see the <!-- linking from this WADL-generated section to hand-coded section; THIS LINK FAILS until the document moves to production -->
                        <a
                            href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html"
                            >"Sample Authentication Request and Response"</a> section in the <cite>API Developer Guide.</cite></p>
                </doc>
            </representation>
        </response>
         <response status="400" xmlns="http://wadl.dev.java.net/2009/02">
                <doc title="identity:badRequest">Missing requred parameters.</doc>
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
         </response>
                
         <response status="401">
            <doc title="Unauthorized">Authentication has failed. The authentication token has expired. Use the POST token operation 
            to get a new token.</doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            <doc title="Unauthorized">Permission denied, adjusting authentication credentials will not help.</doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
         <response status="404">
             <doc title="Unauthorized">The requested resource was not found.The subject token in X-Subject-Token  
                 has expired or is no longer available. Use the POST token request to get a new token.</doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
        </method>

    <method name="GET" id="validateToken">
        <doc xml:lang="EN" title="Validate Token">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Verify that the specified token is valid, 
                and owned by the specified tenant. Retun the tenant credentials if successful.
                specified tenant; return the permissions relevant to a particular client. </p>
            <p xmlns="http://www.w3.org/1999/xhtml"> In the <code>/tokens/{tokenId}</code> path, valid tokens exist and
                invalid tokens do not. For application development, make sure that the client submitting the Validate token 
                request can handle an ItemNotFound (<code>404</code>) error for an invalid token.</p>
        </doc>
        <request>
            <param name="belongsTo" style="query" required="false" type="xsd:string">
                <doc xml:lang="EN">
                    <p xmlns="http://www.w3.org/1999/xhtml">Validate that a token has the specified tenant in scope.</p>
                </doc>
            </param>
            <!-- Impersonator samples show how RAX-AUTH extension can request token for impersonator 
            but 
            2012-03-19 Itari Ighoroje says there is no special request, hide these 
            <representation mediaType="application/xml" >
                <doc xml:lang="EN" title="Validate Token for Impersonation Request: XML">
                    <xsdxt:code href="../common/samples/Impersonator.xml" />
                </doc>
            </representation>
            <representation mediaType="application/json" >
                <doc xml:lang="EN" title="Validate Token for Impersonation Request: JSON">
                    <xsdxt:code href="../common/samples/Impersonator.json" />
                </doc>
            </representation>
            
                 Impersonator samples show how RAX-AUTH extension can request token for impersonator -->
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:access">
                <doc>
                    <xsdxt:code href="../common/samples/validatetoken.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/validatetoken.json"/>
                </doc>
            </representation>
            <!-- Validate Token Response samples show how RAX-AUTH extension can describe impersonator -->
            <representation mediaType="application/xml">
                <doc xml:lang="EN" title="Validate Token for Impersonation Response: XML">
                    <xsdxt:code href="../common/samples/ValidateTokenResponse.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc xml:lang="EN" title="Validate Token for Impersonation Response: JSON">
                    <xsdxt:code href="../common/samples/ValidateTokenResponse.json"/>
                </doc>
            </representation>
            <!-- Validate Token Response samples validating a Racker token -->
            <representation mediaType="application/xml">
                <doc xml:lang="EN" title="Validate Token for Racker Response: XML">
                    <xsdxt:code href="../common/samples/ValidateRackerTokenResponse.xml" security="internal"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc xml:lang="EN" title="Validate Token for Racker Response: JSON">
                    <xsdxt:code href="../common/samples/ValidateRackerTokenResponse.json" security="internal"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="HEAD" id="checkToken">
        <doc xml:lang="EN" title="Check Token">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Check that a token is valid and that it belongs to a
                particular tenant (abbreviated response). </p>
        </doc>
        <request>
            <param name="belongsTo" style="query" required="false" type="xsd:string">
                <doc xml:lang="EN">
                    <p xmlns="http://www.w3.org/1999/xhtml">Validate a token to determine whether the token provides 
                        access to the tenant specified in the API service request.
                        (abbreviated response).</p>
                    <p xmlns="http://www.w3.org/1999/xhtml">Valid tokens will exist in the <code>/tokens/{tokenId}</code>
                        path and invalid tokens will not. In other words, a user should expect an itemNotFound
                            (<code>404</code>) fault for an invalid token.</p>
                    <p xmlns="http://www.w3.org/1999/xhtml">If <code>belongsTo</code> is provided, validates that a token
                        has a specific tenant in scope.</p>
                    <p xmlns="http://www.w3.org/1999/xhtml">No response body is returned for this method.</p>
                </doc>
            </param>
        </request>
        <response status="200 203"/> &commonFaults; &getFaults; </method>
    
    <method name="DELETE" id="revokeToken">
        <doc xml:lang="EN" title="Revoke Token">
            <p xmlns="http://www.w3.org/1999/xhtml"> class="shortdesc">Revoke token.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">This call revokes a token, returning code <code>204</code>. if successful
                and <code>404</code> if token in URI is invalid. </p>
        </doc>
        
        <!-- no request or response body-->
        
        <response status="204"/>&commonFaults; &getFaults;</method>

    <!--User Operations-->
    
    <method name="GET" id="getUserByName">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Get User by Name">
            <para xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Get detailed account information for a specified user, by
                user name.</para>
            <para xmlns="http://www.w3.org/1999/xhtml">This request returns the following information for each account associated 
                with the  specified user name:  email address, username, user ID, status, default region, and domain id.</para>
            <note>
                <para>
                    <emphasis role="italic">
                        If you  authenticated with the user role, you can see only yourself.
                    </emphasis>
                </para>
                <para>
                    If this request is issued by  a user holding the admin role (<code>identity:user-admin</code>),
                    the specific user's information is returned only if that user is associated with the same tenant as the 
                    requester's  <code>user-admin</code> token.
                </para>
                <para> If this request is issued by a user holding the user role (<code>identity:default</code>), 
                    information is returned for only the requester. 
                </para>
            </note>
        </wadl:doc>
        <request>
            <param name="name" style="query" type="xsd:string" required="true">
                <doc>A user's name.</doc>
            </param>
        </request>
        <response status="200 203">
            
            <!-- Pull in shared response parameters by using entity from common.ent file -->
            
            &userByAttrRsp; 
            <representation mediaType="application/xml" element="identity:user">
                <doc>
                    <xsdxt:code href="../common/samples/user.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/user.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="GET" id="getUserById">
        <doc xml:lang="EN" title="Get User by ID">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Get detailed account information for a specific user, by userid.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This request returns the following information for each account associated with the specified user ID: 
                email address, username, user ID, status, default region, and domain id.</p>
        </doc>
        
        <response status="200 203">
            <!-- Pull in shared response parameters by using entity from common.ent file -->
            &userByAttrRsp;
            <representation mediaType="application/xml" element="identity:user">
                <doc>
                    <xsdxt:code href="../common/samples/user.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/user.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <method name="GET" id="getUserByEmail">
        <doc xml:lang="EN" title="Get User by Email">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Get detailed information about a specific user, by
                user email.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">This request returns the following information for 
                all accounts with the specified user email address: email address, username,
                user ID, status, domain, creation date, update date, default region, and domain id.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">Default region, indicated by <code>defaultRegion</code>, associates this
                user with a specific regional datacenter: typical values include DFW, ORD and LON. A blank value is also
                acceptable, indicating that no default region has been assigned for this user. If a default region has been
                assigned and a service in this user's service catalog is available in multiple regions, API service requests
                are managed in the <code>defaultRegion</code>. You can see examples of
                services available in multiple regions in the "General API Information" chapter's 
                
                <!-- linking from this WADL-generated section to hand-coded section -->
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html"
                    >"Sample Authentication Request and Response"</a> section.</p>
        </doc>
        <request>
            <param name="email" style="query" type="xsd:string" required="true">
                <doc>A user's email address.</doc>
            </param>
        </request>
        <response status="200 203">
            
            <!-- Pull in shared response parameters by using entity from common.ent file -->
            
            &userByAttrRsp;
            <representation mediaType="application/xml">
                <doc>
                    <xsdxt:code href="../common/samples/userbyemailresponse.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/userbyemailresponse.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <method name="GET" id="listUserGlobalRoles">
        <doc xml:lang="EN" title="List User Global Roles">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Return global roles for a specific user.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This call returns a list of global roles associated with the user with
                the specified user ID. If you have only the user's name but not the user's ID, use "Get User by Name" to
                obtain complete identifying information about the user. For each role listed, the response includes
                identifying information such as the role's ID (such as <code>123</code>), name (such as <code>Admin</code>,
                and description (such as <code>All Access</code>). The list of global roles excludes any tenant roles
                associated with this user.</p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:roles">
                <doc>
                    <xsdxt:code href="../common/samples/roles.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/roles.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <!-- Tenant Operations -->

    <method name="GET" id="listTenants">
        <doc xml:lang="EN" title="Get Tenants">
            <p xmlns="http://www.w3.org/1999/xhtml">Get a list of tenants.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">This call must be authenticated, so a valid <code>X-Auth-Token</code>
                must be passed in as a header. The operation returns a list of tenants for which the supplied token provides
                access. </p>
            <xsdxt:samples>
                <xsdxt:sample xmlns="http://docs.rackspace.com/api" title="Get Tenants Request with X-Auth-Token">
                    <xsdxt:code href="../common/samples/tenants-request.txt" language="text"/>
                </xsdxt:sample>
            </xsdxt:samples>
        </doc>
        <!-- omit Marker and Limit rows from Get Tenants Request Parameters table
        <request>
            <param name="marker" style="query" required="false" type="xsd:string"/>
            <param name="limit" style="query" required="false" type="xsd:int"/>
        </request>
        -->
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenants">
                <doc>
                    <xsdxt:code href="../common/samples/tenants.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/tenants.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="GET" id="getTenantByName">
        <doc xml:lang="EN" title="Get Tenant by Name">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Return detailed information about a tenant, by name. </p>
            <p xmlns="http://www.w3.org/1999/xhtml"> This request returns the following information for the specified tenant name:
                the tenant ID, name, description, and status.</p>
        </doc>
        <request>
            <param name="name" style="query" type="xsd:string" required="true"/>
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenant">
                <doc>
                    <xsdxt:code href="../common/samples/tenant.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/tenant.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="GET" id="getTenantById">
        <doc xml:lang="EN" title="Get Tenant by ID">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc"> Return detailed information about a tenant, by ID. </p>
            <p xmlns="http://www.w3.org/1999/xhtml">This request returns identifying information about the tenant with the
                specified tenant ID. Identifying information includes the tenant's ID, name, description, and status. </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenant">
                <doc>
                    <xsdxt:code href="../common/samples/tenant.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/tenant.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="GET" id="listEndpointsForToken">
        <doc xml:lang="EN" title="List Endpoints for Token">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">Return a list of endpoints associated with a specific
                token. </p>
            <p xmlns="http://www.w3.org/1999/xhtml">This call returns a list of endpoints associated with a specific token.
                Like the service catalog returned by a successful authentication, you can use this list of endpoints as the
                basis of a list of the services available to this user. </p>
            <p xmlns="http://www.w3.org/1999/xhtml">To see authentication requests and responses with annotations explaining
                key ideas, see the examples in the "General API Information" chapter's <!-- linking from this WADL-generated section to hand-coded section; THIS LINK FAILS until the document moves to production -->
                <a
                    href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html"
                    >"Sample Authentication Request and Response"</a> section.</p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:endpoints">
                <doc>
                    <xsdxt:code href="../common/samples/endpoints.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/endpoints.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <method name="GET" id="listRolesForUserOnTenant">
        <doc xml:lang="EN" title="List Roles for User on Tenant">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">List roles for a specified user on a specified tenant.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">This operation returns a list of roles for a specified user within a
                specified tenant. The list of roles excludes any global roles associated with this user.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">Users and tenants are specified by their unique ID. If you do not know the tenant or user ID, 
                you can use the Get user by name and Get tenant by name operations to retrieve the value.</p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:roles">
                <doc>
                    <xsdxt:code href="../common/samples/roles.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/roles.json"/>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
</application>
