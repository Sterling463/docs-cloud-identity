<?xml version="1.0" encoding="UTF-8"?>
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entites with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent identity-admin.wadl             -->
<!--*******************************************************-->
<!DOCTYPE application [
    <!ENTITY % common  SYSTEM "../common/common.ent">
    %common;
]>

<application xmlns="http://wadl.dev.java.net/2009/02"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
	xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
	xmlns:capi="http://docs.openstack.org/common/api/v1.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" 
	xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd
		http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd
		http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd
		">

    <grammars>
        <include href="../common/xsd/api.xsd"/>
        <include href="../common/xsd/api-common.xsd"/>
    </grammars>

    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->

    <!-- We should use SSL in production -->
    <resources base="http://localhost:35357">
        <resource id="version" path="v2.0">
        	<method href="#getVersionInfo"/>

            <resource id="extensions" path="extensions">
		        <method href="#listExtensions"/>

                <resource id="extension" path="{alias}">
                    <param name="alias" style="template" type="xsd:string"/>
                    <method href="#getExtension"/>
                </resource>
            </resource>

            <resource id="tokens" path="tokens">
                <method href="#authenticate"/>
                <resource id="tokenById" path="{tokenId}">
			        <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
			            <doc>Arbitrary character string generated by the
                            authentication service in response to
                            valid credentials.</doc>
			        </param>
                    <param name="tokenId" style="template" type="xsd:string" required="true"/>
                    <method href="#revokeToken"/>
                    <method href="#validateToken"/>
                    <method href="#checkToken"/>
                    <resource id="endpointsForToken" path="endpoints">
                        <method href="#listEndpointsForToken"/>
                    </resource>
                </resource>
            </resource>

            <resource id="users" path="users">
                <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
                    <doc>Arbitrary character string generated by the
                        authentication service in response to valid
                        credentials.</doc>
                </param>    
                <method href="#getUserByName"/>
                <method href="#getUserByEmail"/>
                <resource id="userid" path="{userId}">
                    <param name="userId" style="template" type="xsd:string" required="true"/>
                    <method href="#getUserById"/>
                    <resource id="userRoles" path="roles">
                        <method href="#listUserGlobalRoles"/>
                    </resource>
                </resource>
            </resource>


            <resource id="tenants" path="tenants">
                <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
                    <doc>
                        <p xmlns="http://www.w3.org/1999/xhtml">
                            Arbitrary character string generated by the authentication service in response to valid credentials.
                        </p>
                    </doc>
                </param>
		<method href="#listTenants"/>
                <method href="#getTenantByName"/>
                <resource id="tenantById" path="{tenantId}">
                    <param name="tenantId" style="template" type="xsd:string" required="true"/>
                    <method href="#getTenantById"/>

                    <resource id="usersForTenant" path="users">
                        <resource id="getTenantUser" path="{userId}">
                            <param name="userId" style="template" type="xsd:string" required="true"/>

                            <resource id="userRolesForTenant" path="roles">
                                <method href="#listRolesForUserOnTenant"/>
                             </resource>
                        </resource>
                    </resource>
                </resource>
            </resource>
        </resource>
    </resources>

    <!--*******************************************************-->
    <!--               Resource Types                          -->
    <!--*******************************************************-->
    
    <resource_type id="VersionDetails">
        <method href="#getVersionInfo"/>
    </resource_type>
    
    <resource_type id="ExtensionList">
        <doc xml:lang="EN" title="Extension List">
            <p xmlns="http://www.w3.org/1999/xhtml">
                A list of supported extensions.
            </p>
        </doc>
        <method href="#listExtensions"/>
    </resource_type>
    
    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->

    <!-- Version -->

    <method name="GET" id="getVersionInfo">
        <doc xml:lang="EN" title="Version Details">
            <p xmlns="http://www.w3.org/1999/xhtml">
            	Return detailed information about this specific version of the API.
            </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="capi:version">
                <param name="location" style="plain" type="xsd:anyURI" required="true" path="/capi:version/atom:link[@rel='self']/@href">
                    <link resource_type="#VersionDetails" rel="self"/>
                </param>
            </representation>
            <representation mediaType="application/json"/>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <!-- Extensions -->

    <method name="GET" id="listExtensions">
        <doc xml:lang="EN" title="List Extensions">
            <p xmlns="http://www.w3.org/1999/xhtml">
            	List supported extensions.
            </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="capi:extensions">
                <param name="next" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='next']/@href">
                    <link resource_type="#ExtensionList" rel="next"/>
                </param>
                <param name="previous" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='previous']/@href">
                    <link resource_type="#ExtensionList" rel="previous"/>
                </param>
            </representation>
            <representation mediaType="application/json"/>
        </response>
        &commonFaults;
    </method>
    <method name="GET" id="getExtension">
        <doc xml:lang="EN" title="Get Extension Details">
            <p xmlns="http://www.w3.org/1999/xhtml">
            	Get details about a specific extension.
            </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="capi:extension"/>
            <representation mediaType="application/json"/>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <!-- Token Operations -->

    <method name="POST" id="authenticate">
        <doc xml:lang="EN" title="Authenticate">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
	      Authenticate to generate a token.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
	      This call returns a token if successful. Each ReST request 
                requires the inclusion of a specific authorization token HTTP x-header, defined as <code>X-Auth-Token</code>.
                The token must be supplied for calls against other services and for other
                calls to the authentication service, such as the <code>GET /tenants</code> call.
	      Clients obtain <code>X-Auth-Token</code> and the URL endpoints for other service APIs 
                by supplying their valid credentials to the authentication service. 
	       </p>
	    <p xmlns="http://www.w3.org/1999/xhtml">
	      Client authentication is provided via a ReST interface using the POST method,
	      with <code>v2.0/tokens</code> supplied as the path. A payload of credentials must be included
	      in the body.
	    </p>
	    <p xmlns="http://www.w3.org/1999/xhtml">
	      The authentication service is a ReSTful web service. It is the entry point to all service APIs.
	      To access the authentication service, you must know its URL.
	    </p>
        <p xmlns="http://www.w3.org/1999/xhtml">
            You can authenticate by providing any of several kinds of credentials:
            <wadl:doc xmlns="http://docbook.org/ns/docbook">
              <itemizedlist spacing="compact">
                  <listitem>
                      <para>
                          username and API key
                      </para>
                  </listitem>
                  <listitem>
                      <para>
                          username, API key, and tenant ID
                      </para>
                  </listitem>
                  <listitem>
                      <para>
                          username, API key, and tenant name
                      </para>
                  </listitem>
                  <listitem>
                      <para>
                          username and password
                      </para>
                  </listitem>
                  <listitem>
                      <para>
                          username, password and tenant ID
                      </para>
                  </listitem>
                  <listitem>
                      <para>
                          username, password and tenant name
                      </para>
                  </listitem>
                  <listitem>
                      <para>
                          token and tenant ID
                      </para>
                  </listitem>
              </itemizedlist>
            </wadl:doc>
          You can use whichever valid credentials you prefer. 
          Unless you specify a tenant, the authentication service's response is not affected by which kind of credentials you use.
          <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <important>
              <para>
                  If you specify a tenant, the <code>Service Catalog</code> returned to you will include only endpoints to which that tenant has access. 
              </para>
            </important>
          </wadl:doc>
        </p>
        <p xmlns="http://www.w3.org/1999/xhtml">            
           To see authentication requests and responses with annotations explaining key ideas, see the examples
           in the "General API Information" chapter's
           <!-- linking from this WADL-generated section to hand-coded section; THIS LINK FAILS until the document moves to production -->
            <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</a> section.
        </p>
        <p xmlns="http://www.w3.org/1999/xhtml">
           The examples below demonstrate authentication with several kinds of credentials.
        </p>
        </doc>
        <request>
            <representation mediaType="application/xml" element="identity:auth">
	      <doc>
	          <xsdxt:sample title="Authenticate (with Username and API Key Credentials) Request: XML">
                  <xsdxt:code href="../common/samples/auth_with_apikey.xml"/>
              </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Username, API Key, and Tenant ID Credentials) Request: XML">
	              <xsdxt:code href="../common/samples/auth_with_apikey_tenantId.xml"/>
	          </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Username and Password Credentials) Request: XML">
                  <xsdxt:code href="../common/samples/auth_credentials.xml"/>
              </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Username, Password, and Tenant ID Credentials) Request: XML">
	              <xsdxt:code href="../common/samples/auth_credentials_tenantId.xml"/>
	          </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Tenant ID and Token Credentials) Request: XML">
                <xsdxt:code href="../common/samples/auth_with_token_tenantId.xml"/>
              </xsdxt:sample>
              <xsdxt:sample title="Authenticate (with Tenant Name and Token Credentials) Request: XML">
				<xsdxt:code href="../common/samples/auth_with_token_tenantName.xml"/>
	          </xsdxt:sample>
	      </doc>
	    </representation>
        <representation mediaType="application/json">
	      <doc>
	          <xsdxt:sample title="Authenticate (with Username and API Key Credentials) Request: JSON">   
                  <xsdxt:code href="../common/samples/auth_with_apikey.json"/>
              </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Username, API Key, and Tenant ID Credentials) Request: JSON">   
	              <xsdxt:code href="../common/samples/auth_with_apikey_tenantId.json"/>
	          </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Username and Password Credentials) Request: JSON">
                <xsdxt:code href="../common/samples/auth_credentials.json"/>
              </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Username, Password, and Tenant ID Credentials) Request: JSON">
				<xsdxt:code href="../common/samples/auth_credentials_tenantId.json"/>
	          </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Tenant ID and Token Credentials) Request: JSON">   
                <xsdxt:code href="../common/samples/auth_with_token_tenantId.json"/>
              </xsdxt:sample>
	          <xsdxt:sample title="Authenticate (with Tenant Name and Token Credentials) Request: JSON">   
				<xsdxt:code href="../common/samples/auth_with_token_tenantName.json"/>
	          </xsdxt:sample>
	      </doc>
	    </representation>
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:access">
            <!-- Note: WADLs generally get samples from /common/samples/ while the rest of the book gets samples from /docbkx/samples/ -->
            <!-- tired of trying to maintain synch between /common/samples/auth.xml & .json and /docbkx/samples/auth-annotated.xml & .json -->
            <!-- (showing same sample responses in Ch 3 & Ch 4, annotated with callouts in Ch 3 only) -->
            <!-- for these 2 samples only, this Ch 4 WADL reuses the samples shown in Ch3 -->
            <!-- now I can stop losing synch -->
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                <important>
                    <para>
                        The token's expiration time is formatted differently in the US and UK.
                    </para>
                </important>
	          <xsdxt:sample title="Authentication Response for US Endpoint: XML">
		          <xsdxt:code href="../docbkx/samples/auth-annotated.xml"/>
	          </xsdxt:sample> 
                    <important>
                        <para>
                            The token's expiration time is formatted differently in the US and UK.
                        </para>
                    </important>
	          <xsdxt:sample title="Authentication Response for UK Endpoint: XML">
	              <xsdxt:code href="../docbkx/samples/auth-UK-time.xml"/>
	          </xsdxt:sample>
	          </wadl:doc>
	    </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <important>
                        <para>
                            The token's expiration time is formatted differently in the US and UK.
                        </para>
                    </important>
	          <xsdxt:sample title="Authentication Response for US Endpoint: JSON">
		          <xsdxt:code href="../docbkx/samples/auth-annotated.json"/>	
	          </xsdxt:sample>
                    <important>
                        <para>
                            The token's expiration time is formatted differently in the US and UK.
                        </para>
                    </important>
	          <xsdxt:sample title="Authentication Response for UK Endpoint: JSON">
	              <xsdxt:code href="../docbkx/samples/auth-UK-time.json"/>	
	          </xsdxt:sample>
                    
	          <p xmlns="http://www.w3.org/1999/xhtml">            
	              To see authentication requests and responses with annotations explaining key ideas, see the examples
	              in the "General API Information" chapter's
	              <!-- linking from this WADL-generated section to hand-coded section; THIS LINK FAILS until the document moves to production -->
	              <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</a> section.
	          </p> 
                </wadl:doc>
            </representation>
        </response>
        <response status="403">
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    <method name="GET" id="validateToken">
        <doc xml:lang="EN" title="Validate Token">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
                Check that a token is valid and that it belongs to the specified tenant;
                return the permissions relevant to a particular client.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                In the
                <code>/tokens/{tokenId}</code> path,
                valid tokens exist
                and invalid
                tokens do not. A client should be prepared to handle an
                itemNotFound (<code>404</code>) fault for an
                invalid token.
            </p>
        </doc>
        <request>
            <param name="belongsTo" style="query" required="false" type="xsd:string">
                <doc xml:lang="EN">
                    <p xmlns="http://www.w3.org/1999/xhtml">
                        Validate that a token has the specified tenant in scope.
                    </p>
                </doc>
            </param>
            <!-- Impersonator samples show how RAX-AUTH extension can request token for impersonator 
            but 
            2012-03-19 Itari Ighoroje says there is no special request, hide these 
            <representation mediaType="application/xml" >
                <doc xml:lang="EN" title="Validate Token for Impersonation Request: XML">
                    <xsdxt:code href="../common/samples/Impersonator.xml" />
                </doc>
            </representation>
            <representation mediaType="application/json" >
                <doc xml:lang="EN" title="Validate Token for Impersonation Request: JSON">
                    <xsdxt:code href="../common/samples/Impersonator.json" />
                </doc>
            </representation>
            
                 Impersonator samples show how RAX-AUTH extension can request token for impersonator --> 
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:access">
	      <doc>
		<xsdxt:code href="../common/samples/validatetoken.xml"/>
	      </doc>
	    </representation>
            <representation mediaType="application/json">
	      <doc>
		<xsdxt:code href="../common/samples/validatetoken.json"/>
	      </doc>
	    </representation>
        <!-- Validate Token Response samples show how RAX-AUTH extension can describe impersonator 
        -->
            <representation mediaType="application/xml" >
                <doc xml:lang="EN" title="Validate Token for Impersonation Response: XML">
                    <xsdxt:code href="../common/samples/ValidateTokenResponse.xml" />
                </doc>
            </representation>
            <representation mediaType="application/json" >
                <doc xml:lang="EN" title="Validate Token for Impersonation Response: JSON">
                    <xsdxt:code href="../common/samples/ValidateTokenResponse.json" />
                </doc>
            </representation>
         <!-- 
              Validate Token Response samples show how RAX-AUTH extension can describe impersonator -->   
        </response>
        &commonFaults;
        &getFaults;
    </method>
    <method name="HEAD" id="checkToken">
        <doc xml:lang="EN" title="Check Token">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
                Check that a token is valid and that it belongs to a particular tenant
                (abbreviated response).
            </p>
        </doc>
        <request>
            <param name="belongsTo" style="query" required="false" type="xsd:string">
                <doc xml:lang="EN">
                    <p xmlns="http://www.w3.org/1999/xhtml">
                        Validate that a token has the supplied tenant in scope. (abbreviated response).
                    </p>
                    <p xmlns="http://www.w3.org/1999/xhtml">
                        Valid tokens will exist in the
                        <code>/tokens/{tokenId}</code> path and invalid
                        tokens will not.  In other words, a user should expect an
                        itemNotFound (<code>404</code>) fault for an
                        invalid token.
                    </p>
                    <p xmlns="http://www.w3.org/1999/xhtml">
                        If <code>belongsTo</code> is provided, validates that a token has a specific tenant in scope.
                    </p>
                    <p xmlns="http://www.w3.org/1999/xhtml">
                        No response body is returned for this method.
                    </p>
                </doc>
            </param>
        </request>
        <response status="200 203"/>
        &commonFaults;
        &getFaults;
    </method>
    <method name="DELETE" id="revokeToken">
        <doc xml:lang="EN" title="Revoke Token">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
                Revoke token.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This call revokes a token, returning code <code>204</code> if successful and 
                <code>404</code> if token in URI is invalid.
            </p>
        </doc>
        <!-- no request or response body-->
        <response status="204"/>
        &commonFaults;
        &getFaults;
    </method>

    <!--User Operations-->
    <method name="GET" id="getUserByName">
        <doc xml:lang="EN" title="Get User by Name">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
                Return detailed information about a specific user, by user name.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This request returns identifying information about the user with the specified user name. 
                Identifying information includes the user's email account, username, user ID, status, and default region.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                Default region, indicated by <code>defaultRegion</code>, 
                associates this user with a specific regional datacenter: typical values include DFW, ORD and LON.  
                A blank value is also acceptable, indicating that no default region has been assigned for this user. 
                If a default region has been assigned for this user 
                and a service in this user's service catalog is available in multiple regions, 
                the user will obtain the service from the region specified by <code>defaultRegion</code>.
                You can see examples of services available in multiple regions 
                in the "General API Information" chapter's
                <!-- linking from this WADL-generated section to hand-coded section -->
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</a> section.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                When a user creates a new cloud server via the <a href="http://mycloud.rackspace.com/">
                Cloud Control Panel</a>, the region specified by <code>defaultRegion</code> is  
                visible on the control panel but the region cannot currently be changed there.
                To change the association of a user with a default region,
                use 
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_updateUser_v2.0_users__userId__.html">Update Users</a> 
                as you would to change any other descriptive information about the user.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                In the examples below, 
                <code>defaultRegion</code> is specified as <code>DFW</code>:
                when this user has a choice between consuming a service in the <code>DFW</code> region 
                and consuming the same service in any other region, 
                the user will consume the service in <code>DFW</code>.
            </p>
        </doc>
        <request>
            <param name="name" style="query" type="xsd:string" required="true"/>
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:user">
	      <doc>
		<xsdxt:code href="../common/samples/user.xml"/>
	      </doc>
	    </representation>
            <representation mediaType="application/json">
	      <doc>
                <xsdxt:code href="../common/samples/user.json"/>
	      </doc>
	    </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    <method name="GET" id="getUserById">
        <doc xml:lang="EN" title="Get User by ID">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
                Return detailed information about a specific user, by user ID.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This request returns identifying information about the user with the specified user name. 
                Identifying information includes the user's email account, username, user ID, status, and default region.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                Default region, indicated by <code>defaultRegion</code>, 
                associates this user with a specific regional datacenter: typical values include DFW, ORD and LON.  
                A blank value is also acceptable, indicating that no default region has been assigned for this user. 
                If a default region has been assigned for this user 
                and a service in this user's service catalog is available in multiple regions, 
                the user will obtain the service from the region specified by <code>defaultRegion</code>.
                You can see examples of services available in multiple regions 
                in the "General API Information" chapter's
                <!-- linking from this WADL-generated section to hand-coded section -->
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</a> section.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                When a user creates a new cloud server via the <a href="http://mycloud.rackspace.com/">
                    Cloud Control Panel</a>, the region specified by <code>defaultRegion</code> is 
                visible on the control panel but the region cannot currently be changed there.
                To change the association of a user with a default region,
                use 
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_updateUser_v2.0_users__userId__.html">Update Users</a> 
                as you would to change any other descriptive information about the user.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                In the examples below, 
                <code>defaultRegion</code> is specified as <code>DFW</code>:
                when this user has a choice between consuming a service in the <code>DFW</code> region 
                and consuming the same service in any other region, 
                the user will consume the service in <code>DFW</code>.
            </p>
        </doc>
        <response status="200 203">
          <representation mediaType="application/xml" element="identity:user">
	      <doc>		
                <xsdxt:code href="../common/samples/user.xml"/>
	      </doc>
	    </representation>
          <representation mediaType="application/json">
	      <doc>
		        <xsdxt:code href="../common/samples/user.json"/>
	      </doc>
	    </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    
    <method name="GET" id="getUserByEmail">
        <doc xml:lang="EN" title="Get User by Email">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
                Return detailed information about a specific user, by user email.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This request returns one or more sets of identifying information about the user with the specified user email. 
                Identifying information includes the user's email account, username, user ID, status, 
                domain, creation date, update date, and default region.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                Default region, indicated by <code>defaultRegion</code>, 
                associates this user with a specific regional datacenter: typical values include DFW, ORD and LON.  
                A blank value is also acceptable, indicating that no default region has been assigned for this user. 
                If a default region has been assigned for this user 
                and a service in this user's service catalog is available in multiple regions, 
                the user will obtain the service from the region specified by <code>defaultRegion</code>.
                You can see examples of services available in multiple regions 
                in the "General API Information" chapter's
                <!-- linking from this WADL-generated section to hand-coded section -->
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</a> section.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                When a user creates a new cloud server via the <a href="http://mycloud.rackspace.com/">
                    Cloud Control Panel</a>, the region specified by <code>defaultRegion</code> is 
                visible on the control panel but the region cannot currently be changed there.
                To change the association of a user with a default region, use
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_updateUser_v2.0_users__userId__.html">Update Users</a> 
                as you would to change any other descriptive information about the user.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                In the examples below, 
                <code>defaultRegion</code> is specified as <code>ORD</code>:
                when this user has a choice between consuming a service in the <code>ORD</code> region 
                and consuming the same service in any other region, 
                the user will consume the service in <code>ORD</code>.
            </p>
        </doc>
        <request>
            <param name="email" style="query" type="xsd:string" required="true"/>
        </request>
        <response status="200 203">
            <representation mediaType="application/xml">
                <doc>
                    <xsdxt:code href="../common/samples/userbyemailresponse.xml"/>
                </doc>
            </representation>
            <representation mediaType="application/json">
                <doc>
                    <xsdxt:code href="../common/samples/userbyemailresponse.json"/>
                </doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    
    <method name="GET" id="listUserGlobalRoles">
        <doc xml:lang="EN" title="List User Global Roles">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
            	Return global roles for a specific user.
            	</p>            
            <p xmlns="http://www.w3.org/1999/xhtml">
                This call returns a list of global roles associated with 
                the user with the specified user ID. If you have only the user's name but not the user's ID, use "Get User by Name" to 
                obtain complete identifying information about the user.
            	For each role listed, the response includes identifying information 
            	such as the role's ID (such as <code>123</code>), name (such as <code>Admin</code>,
                and description (such as <code>All Access</code>).
            	The list of global roles excludes any tenant roles associated with this user.
            </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:roles">
	      <doc>
                <xsdxt:code href="../common/samples/roles.xml"/>
	      </doc>
	    </representation>
            <representation mediaType="application/json">
	      <doc>
		<xsdxt:code href="../common/samples/roles.json"/>
	      </doc>
	    </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>

    <!-- Tenant Operations -->

    <method name="GET" id="listTenants">
        <doc xml:lang="EN" title="Get Tenants">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
            	Get a list of tenants.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
	      This call must be authenticated, so a valid <code>X-Auth-Token</code> must
	      be passed in as a header. 
	      The operation returns a list of tenants for which the supplied token provides
	      access.
            </p>
	    <xsdxt:samples>
	      <xsdxt:sample xmlns="http://docs.rackspace.com/api" title="Get Tenants Request with X-Auth-Token">
		<xsdxt:code href="../common/samples/tenants-request.txt" language="text"/>
	      </xsdxt:sample>
	    </xsdxt:samples>
	</doc>
        <!-- omit Marker and Limit rows from Get Tenants Request Parameters table
        <request>
            <param name="marker" style="query" required="false" type="xsd:string"/>
            <param name="limit" style="query" required="false" type="xsd:int"/>
        </request>
        -->
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenants">
	      <doc>
		<xsdxt:code href="../common/samples/tenants.xml"/>
	      </doc>
	    </representation>
            <representation mediaType="application/json">
	      <doc>
		<xsdxt:code href="../common/samples/tenants.json"/>
	      </doc>
	    </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    <method name="GET" id="getTenantByName">
        <doc xml:lang="EN" title="Get Tenant by Name">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
            	Return detailed information about a tenant, by name.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
            This request returns identifying information about the tenant with the specified tenant name. 
            Identifying information includes the tenant's ID, name, description, and status.
            </p>
        </doc>
        <request>
            <param name="name" style="query" type="xsd:string" required="true"/>
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenant">
	      <doc>
                <xsdxt:code href="../common/samples/tenant.xml"/>
	      </doc>
	    </representation>
            <representation mediaType="application/json">
	      <doc>
		<xsdxt:code href="../common/samples/tenant.json"/>
	      </doc>
	    </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    <method name="GET" id="getTenantById">
        <doc xml:lang="EN" title="Get Tenant by ID">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
            	Return detailed information about a tenant, by ID.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This request returns identifying information about the tenant with the specified tenant ID. 
                Identifying information includes the tenant's ID, name, description, and status.
            </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenant">
	      <doc>
                <xsdxt:code href="../common/samples/tenant.xml"/>
	      </doc>
	    </representation>
            <representation mediaType="application/json">
	      <doc>
                <xsdxt:code href="../common/samples/tenant.json"/>
	      </doc>
	    </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    <method name="GET" id="listEndpointsForToken">
        <doc xml:lang="EN" title="List Endpoints for Token">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
            	Return a list of endpoints associated with a specific token.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This call returns a list of endpoints associated with a specific token. 
                Like the service catalog returned by a successful authentication, you can use this list of endpoints 
                as the basis of a list of the services available to this user. 
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                To see authentication requests and responses with annotations explaining key ideas, see the examples
                in the "General API Information" chapter's
                <!-- linking from this WADL-generated section to hand-coded section; THIS LINK FAILS until the document moves to production -->
                <a href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</a> section.
            </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:endpoints">
	      <doc>
                <xsdxt:code href="../common/samples/endpoints.xml"/>
	      </doc>
	    </representation>
            <representation mediaType="application/json">
	      <doc>
                <xsdxt:code href="../common/samples/endpoints.json"/>
	      </doc>
	    </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    
    <method name="GET" id="listRolesForUserOnTenant">
        <doc xml:lang="EN" title="List Roles for User on Tenant">
            <p xmlns="http://www.w3.org/1999/xhtml" class="shortdesc">
                Return roles for a user within a tenant.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                This call returns a list of roles for a specified user within a specified tenant. 
                The list of roles excludes any global roles associated with this user.
            </p>
            <p xmlns="http://www.w3.org/1999/xhtml">
                Users and tenants are specified by their IDs. 
                If you know the user's name but not the user's ID, use                  
                <xref linkend="GET_getUserByName_v2.0_users_" xrefstyle="select: title" xmlns="http://docbook.org/ns/docbook"></xref>
                 to                   
                obtain complete identifying information about the user.
                If you know the tenant's name but not the tenant's ID, use                  
                <xref linkend="GET_getTenantByName_v2.0_tenants_" xrefstyle="select: title" xmlns="http://docbook.org/ns/docbook"></xref>
                 to                   
                obtain complete identifying information about the tenant.
            </p>
        </doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:roles">
	      <doc>
		     <xsdxt:code href="../common/samples/roles.xml"/>
	      </doc>
            </representation>
            <representation mediaType="application/json">
	      <doc>
                <xsdxt:code href="../common/samples/roles.json"/>
	      </doc>
	     </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
</application>