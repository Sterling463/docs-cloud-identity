<?xml version="1.0" encoding="UTF-8"?>
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entites with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent identity-admin.wadl             -->
<!--*******************************************************-->
<!DOCTYPE application [
    <!ENTITY % common  SYSTEM "../common/common.ent">
    %common;
]>

<application xmlns="http://wadl.dev.java.net/2009/02"
    xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
    xmlns:vers="http://docs.openstack.org/common/api/v1.0"
    xmlns:capi="http://docs.openstack.org/common/api/v1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
    xmlns:HP-IDM="http://docs.openstack.org/identity/api/ext/HP-IDM/v1.0"
    xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
    xmlns:RAX-AUTH="http://docs.openstack.org/identity/api/ext/RAX-AUTH/v1.0"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:linkend="http://www.w3.org/1999/linkend"
    xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:wadl="http://wadl.dev.java.net/2009/02">

    <grammars>
        <include href="../common/xsd/api.xsd"/>
        <include href="../common/xsd/api-common.xsd"/>
        <include href="../common/xsd/RAX-KSKEY-credentials.xsd"/>
        <include href="../common/xsd/RAX-KSGRP-groups.xsd"/>
        <include href="../common/xsd/RAX-AUTH.xsd"/>
    </grammars>

    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->

    <!-- We should use SSL in production -->
    <resources base="http://localhost:5000" xml:id="identity-admin-v2">
        
        <resource id="admin-versions" path="/"> 
            <method href="#admin-getVersions"/>
        </resource>  
        <resource id="admin-version" path="v2.0">
            <method href="#admin-getVersionInfo"/>
            <resource id="admin-extensions" type="#ExtensionList" path="extensions">
                <resource id="admin-extension" path="{alias}">
                    <param xmlns="http://wadl.dev.java.net/2009/02" name="alias" style="template"
                    type="xsd:string">
                    <wadl:doc
                        xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The extension
                            name.</para></wadl:doc>
                    </param>
                <method href="#admin-getExtension"/>
            </resource>
          </resource>
        </resource>
       
           <resource id="tokens" path="v2.0/tokens">
            <method href="#authenticate"/>
            <method href="#authenticate_token"/>
           
            <resource id="sessionId_mfa">
               <param xmlns="http://wadl.dev.java.net/2009/02" name="X-SessionId" style="header" type="xsd:string" required="false">
                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                       <para>The SessionId header returned when a multifactor-enabled user authenticates 
                           to &CIS; with either Password or API key credentials. Required to authenticate with multi-factor authentication Passcode credentials.</para>
                   </wadl:doc>
               </param>
               <param xmlns="http://wadl.dev.java.net/2009/02" name="passcode" style="template"
                   required="false" type="xsd:string">
                   <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"> Passcode received on the multifactor-enabled phone 
                       associated with the user account.
                   </wadl:doc>
               </param>
               <method href="#authenticateWithMultiFactor"/>
            </resource> 
           
           <!-- Token manaagement resources -->
           
           <resource id="tokenById" path="{tokenId}">
                <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A valid authentication token with administrative access.</para>
                    </wadl:doc>
                </param>
                <param name="tokenId" style="template" type="xsd:string" required="true">
                        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                            <para>The unique ID for the authentication token issued by &CIS;.</para>
                        </wadl:doc>
                </param>        
                        <method href="#revokeToken"/>
                        <method href="#validateToken"/>
                        <method href="#checkToken"/>
                        <resource id="endpointsForToken" path="endpoints">
                            <method href="#listEndpointsForToken"/>
                        </resource>
                </resource>
       </resource>
        
        <!-- User management resources -->
    
    <resource id="admin-user" path="v2.0/users">
            <param xmlns="http://wadl.dev.java.net/2009/02" name="X-Auth-Token" style="header" type="xsd:string" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid admin authentication token.</para>
                </wadl:doc>
            </param>
            <method href="#admin-addUser"/>    
            <method href="#admin-listUsers"/>
        <resource id="admin-userid" path="{userId}">
            <param name="userId" style="template" type="xsd:string" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">A user ID assigned by system when user is added.</wadl:doc>
            </param>
            <method href="#admin-getUserById"/>
            <method href="#admin-updateUser"/>
            <method href="#admin-deleteUser"/>
            
            <resource id="admin-creds" path="OS-KSADM/credentials">
                    <method href="#admin-addUserCredential"/>
                    <method href="#admin-listCredentials"/>
                        
                    <resource id="admin-userCredentialsByType"
                        path="RAX-KSKEY:apiKeyCredentials">
                        <method href="#admin-getUserCredential"/>
                        <method href="#admin-updateUserCredential"/>
                        <method href="#admin-deleteUserCredential"/>
                        
                        <resource id="admin-reset_apikey_credentials" path="RAX-AUTH/reset">
                            <method href="#admin-resetUserAPIKeyCredentials"/>
                        </resource>
                    </resource>
            </resource>
        </resource>
        </resource>
             <resource id="tenants" path="v2.0/tenants">
                <param xmlns="http://wadl.dev.java.net/2009/02" name="X-Auth-Token" style="header" type="xsd:string" required="true">
                    <wadl:doc>A valid authentication token issued to a user with administrative privileges.
                    </wadl:doc>
                </param>
                <method href="#listTenants"/>
                <method href="#getTenantByName"/>
                        
                  <resource id="tenantById" path="{tenantId}">
                    <param xmlns="http://wadl.dev.java.net/2009/02" name="tenantId" style="template"
                        type="xsd:string" required="true">
                        <wadl:doc xml:lang="EN">The tenant ID.</wadl:doc>
                    </param>
                    <method href="#getTenantById"/>
                    <resource id="usersForTenant" path="users">
                        <resource id="getTenantUser" path="{userId}">
                            <param xmlns="http://wadl.dev.java.net/2009/02" name="userId" style="template" type="xsd:string" required="true">
                                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                                <para>Specify the ID .</para>
                            </wadl:doc>
                            </param>
                            <resource id="userRolesForTenant" path="roles">
                                <method href="#listRolesForUserOnTenant"/>
                            </resource>
                        </resource>
                    </resource>
                  </resource>
             </resource>
        </resources>     

    <!--*******************************************************-->
    <!--               Resource Types                          -->
    <!--*******************************************************-->
    <resource_type id="VersionDetails">
        <method href="#admin-getVersionInfo"/>
    </resource_type>
    <resource_type id="ExtensionList">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook" title="List extensions">
            <para role="shortdesc">Lists supported extensions.</para>
        </wadl:doc>
        <method href="#admin-listExtensions"/>
    </resource_type>
    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->

    <!-- Version -->
    <method name="GET" id="admin-getVersions">
        <wadl:doc  xmlns="http://docbook.org/ns/docbook" xml:lang="EN"  title="List versions"><para
                role="shortdesc">Lists information about all Identity
                API versions.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/xml">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <xsdxt:code href="../common/samples/versions.xml"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <xsdxt:code
                        href="../common/samples/versions.json"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/xml">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <xsdxt:code href="../common/samples/versions.xml"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    
    
    
    <method name="GET" id="admin-getVersionInfo">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
            title="Show version details">
            <para role="shortdesc">Shows details for the Identity API
                v2.0.</para>
        </wadl:doc>
        <response status="200 203">
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:sample
                        title="Get version information: JSON response">
                        <xsdxt:code
                            href="../common/samples/version.json"/>
                    </xsdxt:sample>
                </wadl:doc>
            </representation>
            <representation mediaType="application/xml"
                element="capi:version">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:sample
                        title="Get version information: XML response">
                        <xsdxt:code
                            href="../common/samples/version.xml"/>
                    </xsdxt:sample>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method> 
    
   <!--Extension -->
    
    <method name="GET" id="admin-listExtensions">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook"
            title="List extensions">
            <para role="shortdesc">Lists available extensions.</para>
        </wadl:doc>
        <response status="200 203">
            <param name="next" style="plain" type="xsd:anyURI"
                path="/capi:extensions/atom:link[@rel='next']/@href">
                <wadl:doc
                    xmlns:wadl="http://wadl.dev.java.net/2009/02"
                    xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <para>Moves to the next item in the list.</para>
                </wadl:doc>
                <link resource_type="#ExtensionList" rel="next"/>
            </param>
            <param name="previous" style="plain" type="xsd:anyURI"
                path="/capi:extensions/atom:link[@rel='previous']/@href">
                <wadl:doc
                    xmlns:wadl="http://wadl.dev.java.net/2009/02"
                    xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <para>Moves to the previous item in the
                        list.</para>
                </wadl:doc>
                <link resource_type="#ExtensionList" rel="previous"/>
            </param>
            <representation mediaType="application/json"
                element="capi:extensions">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:sample
                        title="List extensions: JSON response">
                        <xsdxt:code href="../common/samples/extensions.json"
                        />
                    </xsdxt:sample>
                </wadl:doc>
            </representation>
            
            <representation mediaType="application/xml"
                element="capi:extensions">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:sample
                        title="List extensions: XML response">
                        <xsdxt:code href="../common/samples/extensions.xml"/>
                    </xsdxt:sample>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    
    <method name="GET" id="admin-getExtension">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook"
            title="Get extension details">
            <para role="shortdesc">Gets detailed information for a
                specified extension.</para>
            <para>Get information about a specific extension by looking up the unique 
                alias. If an extension is not available, the GET extensions operation 
                returns a <code>404</code> error message. For a list of aliases, see 
                <link xlink:href="Extensions-d1e688.html">Extensions</link>.</para>
        </wadl:doc>
        <response status="200 203">
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:sample
                        title="Get extension details: JSON response">
                        <xsdxt:code href="../common/samples/extension.json"/>
                    </xsdxt:sample>
                </wadl:doc>
            </representation>
            <representation mediaType="application/xml"
                element="capi:extension">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:sample
                        title="Get extension details: XML response">
                        <xsdxt:code href="../common/samples/extension.xml"/>
                    </xsdxt:sample>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <!-- Token Operations -->
    
        <method name="POST" id="authenticate">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Authenticate as user with password or API key">
                <para role="shortdesc">Authenticates using either a password or API key and generates an authentication token.</para>
            <para>Submit the POST token authentication request to the &CIS; endpoint URL with <literal>v2.0/tokens </literal> 
                supplied as the path and a payload with either of the following credential types:
                <itemizedlist spacing="compact">
                    <listitem><para>Password credentials: user name and password</para></listitem>
                    <listitem><para>API Key credentials: user name and API key</para></listitem>                 
                </itemizedlist>
            </para>
            <para>You might also need to include either the <code>tenantId</code> or <code>tenantName</code> 
                on authentication requests with API key or password credentials. Some services use multi-level authentication, with 
                service-specific credentials in addition to vendor-specific credentials. 
                In such cases, associating a user with a tenant can be a method of passing that 
                additional level of identifying information to the service. Also, if a user account 
                is assigned to multiple tenants, then including the tenant information generates the authentication 
                token for the specified tenant.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="identity:auth">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:sample title="Authenticate with API key credentials and optional Tenant ID: JSON request">
                        <xsdxt:code href="../common/samples/auth_with_apikey_tenantId.json"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate with Password credentials and optional Tenant ID: JSON request">
                        <xsdxt:code href="../common/samples/auth_credentials_tenantId.json"/>
                    </xsdxt:sample>                   
                </wadl:doc>
            </representation>
            <representation mediaType="application/xml" element="identity:auth">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:sample title="Authenticate with API key credentials and optional Tenant ID: XML request">
                        <xsdxt:code href="../common/samples/auth_with_apikey_tenantId.xml"/>
                    </xsdxt:sample>
                    <xsdxt:sample title="Authenticate with Password credentials and optional Tenant ID: XML request">
                        <xsdxt:code href="../common/samples/auth_credentials_tenantId.xml"/>
                    </xsdxt:sample>
                </wadl:doc>
     
                <param xmlns="http://wadl.dev.java.net/2009/02" name="RAX-KSKEY:APIKeyCredentials" style="plain"
                    required="false" type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An <code>APIKeyCredentials</code>
                            object to specify the <code>username</code> and <code>APIkey</code> string values associated with the &CLOUD; account. 
                            Cannot be specified with <literal>passwordCredentials</literal> or <literal>token</literal>.</para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="passwordCredentials" style="plain"
                    required="false" type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A <code>passwordCredentials</code> object to specify the 
                            <code>username</code> and <code>password</code> string values associated with the &CLOUD; account.
                        Cannot be specified with <literal>APIKeyCredentials</literal> or <literal>token</literal>.</para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="tenantName" style="plain" required="false"
                    type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specify the name of the tenant for the specified user account 
                            or token. Both the
                            <code>tenantId</code> and
                            <code>tenantName</code> attributes are
                            optional. However, they cannot be specified
                            together. If both attributes are specified,
                            the server responds with a <code>400</code>
                            <code>Bad Request</code>.</para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="tenantId" style="plain" required="false"
                    type="capi:UUID">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"><para>The tenant ID. Both the
                        <code>tenantId</code> and
                        <code>tenantName</code> attributes are
                        optional, but should not be specified
                        together. If both attributes are specified,
                        the server responds with a <code>400</code>
                        <code>Bad Request</code>.</para></wadl:doc>
                </param>
            </representation>
        </request>
            <response>
                <representation mediaType="application/json" element="identity:access">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <xsdxt:sample title="Authentication Response: JSON">
                            <xsdxt:code href="../docbkx/samples/auth-annotated.json"/>
                        </xsdxt:sample>
                        <para>For more detailed information about authentication requests and responses with 
                            see the <!-- linking from this WADL-generated section to hand-coded section; THIS LINK FAILS until the document moves to production -->
                            <link xlink:href="Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</link>.</para>
                    </wadl:doc>
                </representation>    
            <representation mediaType="application/xml" element="identity:access">
                <!-- Note: WADLs generally get samples from /common/samples/ while the rest of the book gets samples from /docbkx/samples/ -->
                <!-- tired of trying to maintain synch between /common/samples/auth.xml & .json and /docbkx/samples/auth-annotated.xml & .json -->
                <!-- (showing same sample responses in Ch 3 & Ch 4, annotated with callouts in Ch 3 only) -->
                <!-- for these 2 samples only, this Ch 4 WADL reuses the samples shown in Ch3 -->
                <!-- now I can stop losing synch -->     
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">        
                    <xsdxt:sample title="Authentication Response: XML">
                        <xsdxt:code href="../docbkx/samples/auth-annotated.xml"/>
                    </xsdxt:sample>               
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="access" style="plain" required="true"
                    type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An <code>access</code>
                            object that returns token, user, and service information upon successful authentication.</para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="token" style="plain" required="true"
                    type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A <code>token</code> object that returns the authentication token id that provides access to &CLOUD; 
                            services and capabilities. Save or copy the id value for use in subsequent requests to &CLOUD; services.
                            Also note the expiration date and time. When the token expires, you must re-authenticate with the POST tokens 
                            operation.</para>
                        <para>The response also includes information token issue and expiration timestamps, and the authentication 
                            method used to generate the token which can include the following values:<itemizedlist>
                                <listitem><para>PASSWORD indicates the Rackspace Cloud account password.</para>
                                </listitem>
                                <listitem><para>APIKEY indicates the API Key associated with the user account.</para></listitem>
                                <listitem><para>RSAKey</para></listitem>
                                <listitem><para>PASSCODE issued to the user by Rackspace verification service. 
                                    This authentication method is available on user accounts that have been configured 
                                    for Multifactor authentication.</para>
                                </listitem>
                            </itemizedlist></para>
                    </wadl:doc> 
                </param>
                    <param xmlns="http://wadl.dev.java.net/2009/02" name="user" style="template" required="true"
                        type="xsd:string">
                        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                            <para>
                                A user object that returns the following information about the user, if available for the account: 
                            id, name, assigned roles, default region, domain, multifactor-authentication status.</para></wadl:doc>
                    </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="tenant" style="template" required="true"
                    type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        ><para>A <code>tenant</code>
                            object with tenant information and account state. Information includes:
                            tenant id, name, and description if 
                        provided; The <literal>enabled</literal> parameter indicates whether the 
                        tenant account is active (enabled=true).</para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="serviceCatalog" style="plain" required="true"
                    type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        ><para>A <code>serviceability</code>
                            object that provides information about each service available to the authenticated user 
                            along with the endpoints where the service can be accessed.</para></wadl:doc>
                </param>
            </representation>
        </response>
         <response status="200" xmlns="http://wadl.dev.java.net/2009/02">
             <wadl:doc title="OK">Operation completed successfully. See response examples.</wadl:doc>
         </response>   
         <response status="400" xmlns="http://wadl.dev.java.net/2009/02">
                <wadl:doc title="identity:badRequest">Missing required parameters.</wadl:doc>
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
         </response>
                
         <response status="401">
             <wadl:doc title="Unauthorized" xmlns="http://docbook.org/ns/docbook">
                <para>Authentication has failed. The authentication token has expired. Use the POST token operation 
                    to get a new token.</para>
             </wadl:doc>
             <representation mediaType="application/xml" element="identity:userDisabled"/>
             <representation mediaType="application/json"/>
        </response>
        <response status="401">
            <wadl:doc title="Unauthorized" xmlns="http://docbook.org/ns/docbook">Credentials are either expired or 
                incorrect.</wadl:doc> 
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            <wadl:doc title="User disabled">Permission denied, adjusting authentication credentials will not help.</wadl:doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
         <response status="404">
             <wadl:doc title="Item not found">The requested resource was not found. The subject token in X-Subject-Token  
                 has expired or is no longer available. Use the POST token request to get a new token.</wadl:doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
            <response status="500">
                <wadl:doc title="serviceFault" xmlns="http://docbook.org/ns/docbook"/>
                <representation mediaType="application/xml" element="identity:serviceFault"/>
                <representation mediaType="application/json"/>
            </response>
        </method>
    <method name="POST" id="authenticate_token">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Authenticate as tenant with token">
            <para role="shortdesc">Allows Administrator users to authenticate by using a tenant id or name and 
                a valid token.</para>
            <para>
                Submit the POST token authentication request to the &CIS; endpoint URL with a payload of credentials.  
                Use either of the following credentials in the request.
                <itemizedlist>
                    <listitem>
                        <para><parameter>tenantName</parameter> and <parameter>token</parameter> or</para></listitem>
                    <listitem>
                        <para><parameter>tenantId</parameter> and 
                        <parameter>tokenId</parameter></para>
                     </listitem>
                </itemizedlist>
            </para>
            <para>If the request includes both the name and ID, the server returns a <systemitem>400 Bad Request</systemitem> error.</para>
                <important>
                    <para>
                        If you authenticate as a tenant, the <code>Service Catalog</code> returned includes only
                        endpoints for the cloud services authorized for that tenant.
                    </para>
                </important>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="identity:auth">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">                                       
                    <xsdxt:sample title="Authenticate with Tenant ID and Token Credentials: JSON request">
                        <xsdxt:code href="../common/samples/auth_with_token_tenantId.json"/>
                    </xsdxt:sample>                   
                </wadl:doc>
            </representation>
            <representation mediaType="application/xml" element="identity:auth">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:sample title="Authenticate with Tenant ID and Token Credentials: XML request">
                        <xsdxt:code href="../common/samples/auth_with_token_tenantId.xml"/>
                    </xsdxt:sample>
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="tenantName" style="plain" required="false"
                    type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Specify the name of the tenant. 
                            If you use this value in the request, do not include the tenant ID.</para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="tenantId" style="plain" required="false"
                    type="capi:UUID">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"><para>Specify the ID for the 
                        tenant. If you use this value in the request, do not include the tenant name.
                      </para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="token" style="plain" required="false"
                    type="xsd:string">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A <code>token</code> object that provides a validated token id for the specified tenant. Required
                            to authenticate as a tenant.</para></wadl:doc>
                </param>
            </representation>
        </request>
        <response>
            <representation mediaType="application/json" element="identity:access">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:sample title="Authentication Response: JSON">
                        <xsdxt:code href="../docbkx/samples/auth-annotated.json"/>
                    </xsdxt:sample>
                    <para>For more detailed information about authentication requests and responses with 
                        see the <!-- linking from this WADL-generated section to hand-coded section; THIS LINK FAILS until the document moves to production -->
                        <link xlink:href="Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</link>.</para>
                </wadl:doc>
            </representation>
            <representation mediaType="application/xml" element="identity:access">
                <!-- Note: WADLs generally get samples from /common/samples/ while the rest of the book gets samples from /docbkx/samples/ -->
                <!-- tired of trying to maintain synch between /common/samples/auth.xml & .json and /docbkx/samples/auth-annotated.xml & .json -->
                <!-- (showing same sample responses in Ch 3 & Ch 4, annotated with callouts in Ch 3 only) -->
                <!-- for these 2 samples only, this Ch 4 WADL reuses the samples shown in Ch3 -->
                <!-- now I can stop losing synch -->     
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">        
                    <xsdxt:sample title="Authentication Response: XML">
                        <xsdxt:code href="../docbkx/samples/auth-annotated.xml"/>
                    </xsdxt:sample>               
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="access" style="plain" required="true"
                    type="identity:AuthenticateResponse">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An <code>access</code>
                            object that returns token, user, and service information upon successful authentication.</para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="token" style="plain" 
                    type="identity:TenantForAuthenticateResponse">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A <code>token</code> object that returns the following information about the token: 
                            token id, timestamps showing when the token was issued and when it expires, and the authentication method used 
                            to generate the token which can include the following values: <itemizedlist>
                                <listitem><para>PASSWORD indicates the Rackspace Cloud account password.</para>
                                </listitem>
                                <listitem><para>APIKEY indicates the API Key associated with the user account.</para></listitem>
                                <listitem><para>RSAKey</para></listitem>
                                <listitem><para>PASSCODE issued to the user by Rackspace verification service. 
                                    This authentication method is available on user accounts that have been configured 
                                    for Multi-factor authentication.</para>
                                </listitem>
                            </itemizedlist></para>
                    </wadl:doc> 
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="user" style="template"
                    type="identity:UserForAuthenticateResponse">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            A user object that returns the following information about the user, if available for the account: 
                        </para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="id" style="plain"
                    type="identity:Token">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The authentication token. In the
                            example, the token is
                            <code>my_id</code>.</para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="tenant" style="template" 
                    type="identity:TenantForAuthenticateResponse">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        ><para>A <code>tenant</code>
                            object with tenant information and account state. Information includes:
                            tenant id, name, and description if 
                            provided; The <literal>enabled</literal> parameter indicates whether the 
                            tenant account is active (enabled=true).</para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="serviceCatalog" style="plain" 
                    type="identity:ServiceCatalog">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        ><para>A <code>serviceCatalog</code>
                            object that provides information about each service available to the authenticated user 
                            along with the endpoints where the service can be accessed.</para></wadl:doc>
                </param>
            </representation>
        </response>
        <response status="200" xmlns="http://wadl.dev.java.net/2009/02">
            <wadl:doc title="OK" xmlns="http://docbook.org/ns/docbook">
                <para>Success. The tenant is authenticated.</para>
            </wadl:doc>
            <representation mediaType="application/xml"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400" xmlns="http://wadl.dev.java.net/2009/02">
            <wadl:doc title="identity:badRequest" xmlns="http://docbook.org/ns/docbook">
                <para>Missing required parameters. This error also occurs if you include both the 
                    tenant name and ID in the request.</para></wadl:doc>
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            <wadl:doc title="Unauthorized" xmlns="http://docbook.org/ns/docbook">
                <para>Authentication has failed. The authentication token has expired. Use the POST token operation 
                    to get a new token.</para>
                <para>Additional authentication information required. 
                    The user account is enabled for multifactor authentication. Submit a POST tokens request  
                    with the WWW sessionId from this header and the passcode from the multifactor-enabled phone to complete the authentication process.</para>
            </wadl:doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
            <wadl:doc title="User disabled">Permission denied, adjusting authentication credentials will not help.</wadl:doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="404">
            <wadl:doc title="Item not found">The requested resource was not found. The subject token in X-Subject-Token  
                has expired or is no longer available. Use the POST token request to get a new token.</wadl:doc>
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="500">
            <wadl:doc title="serviceFault" xmlns="http://docbook.org/ns/docbook"/>
            <representation mediaType="application/xml" element="identity:serviceFault"/>
            <representation mediaType="application/json"/>
        </response>
    </method>
    
    <method id="authenticateWithMultiFactor" name="POST">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Authenticate with multifactor passcode credentials">
            <para role="shortdesc">Authenticate with multifactor passcode credentials.</para>
            <note><title>Notes</title>
                <para>
                    <itemizedlist><listitem><para>User accounts that use multifactor authentication must
                    authenticate with &CIS; version 2.0 or later. Attempts to
                    authenticate with earlier API versions will fail.</para></listitem>
                    <listitem><para>Multi-factor authentication is currently available only to
                        customers enrolled in the Early Access program for this feature.</para></listitem>
                </itemizedlist>
                </para>
            </note>
            <para>If an account is enabled to use muliti-factor authentication, authentication is a two-step process: 
                <orderedlist>
                    <listitem>
                        <para>Send an inital POST token authentication request with either password or API credentials. 
                        </para>
                        <para>The request triggers &CIS; to send an SMS message to the phone 
                            associated with the user account. In response to the authentication request,  &CIS; 
                            returns a 401 message that includes 
                            a sessionId parameter in the WWW-Authenticate header and a request for additional credentials.
 <screen>
<computeroutput>&lt;HTTP/1.1 401 Unauthorized
* Server Apache-Coyote/1.1 is not blacklisted
&lt; Server: Apache-Coyote/1.1
&lt;vary:  Accept, Accept-Encoding, X-Auth-Token
&lt; WWW-Authenticate: OS-MF sessionId='APU9ymMBWY5W-pTgnHuZEvjKsM5oG_ler4lC0g_EkCPYvPdUBHK55RWtsgpL5RZ22AyDNaVCNCz6mlDOwbJAI-RLFQywI7CgOvjH0MLhL5a6D-c4cd1x8BbZmy8uT8ejm7jzBUX_vDZ5R0Hcia5DkOB80yWNJ8XVKMxVYLg5Qwp0TPA2zx-HQOTM3xqVQE63u1mYDUqikrXQ', factor='PASSCODE'
&lt;Content-Type: application/json
&lt;Transfer-Encoding: chunked
&lt; Date: Thu, 13 Mar 2XXX 21:10:50 GMT
{ [data not shown]
100   186    0    96  100    90    159    149 --:--:-- --:--:-- --:--:--   159
* Connection #0 to host identity.api.rackspacecloud.com/v2.0 left intact
{
"unauthorized": {
    "code": 401,
    "message": "Additional authentication credentials required."
    }
}
    {
    "key":"value"
    }</computeroutput></screen>
                             
                           </para>                        
                    </listitem>
                    <listitem>
                        <para>Send an additional authentication request providing the sessionId and multifactor-authentication passcode included in the SMS message from &CIS; verification service.</para>
                    </listitem>
                </orderedlist></para>
        </wadl:doc>
        <request>
            <representation mediaType="text/json" element="identity:auth">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Authenticate with multifactor credentials: JSON request with header">
                    <xsdxt:code href="../common/samples/MultiFacAuthReqWithHeader.json"/>
                </wadl:doc>       
            </representation>
            <representation mediaType="text/xml" element="identity:auth">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Authenticate with multifactor credentials: XML request with header">
                    <xsdxt:code href="../common/samples/MultiFacAuthReqWithHeader.xml"/>
                </wadl:doc>           
            </representation>
        </request>
        <response>
            <representation mediaType="text/json" element="identity:access">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Authenticate with multifactor credentials: JSON response with header">
                    <xsdxt:code href="../common/samples/MultiFacAuthRespWithHeader.json"/>
                </wadl:doc>           
            </representation>
            <representation mediaType="text/xml" element="identity:access">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Authenticate with multifactor credentials: XML response with header">
                    <xsdxt:code href="../common/samples/MultiFacWithHeaderResp.xml"/>
                </wadl:doc>           
            </representation>
        </response>
        <response status="200" xmlns="http://wadl.dev.java.net/2009/02">
            <wadl:doc title="OK" xmlns="http://docbook.org/ns/docbook">
                <para>Success. The tenant is authenticated.</para>
            </wadl:doc>
            <representation mediaType="application/xml"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
            <wadl:doc title="Unauthorized" xmlns="http://docbook.org/ns/docbook"><para>An unauthorized error can result from issues like these: 
                <itemizedlist>
                    <listitem><para>Invalid passcode. Provide a valid passcode.</para></listitem>
                    <listitem><para>Additional authentication credentials are required for multifactor-enabled accounts. 
                    Submit an additional authentication request with the multi-factor authentication sessionId and verification passcode from the Rackspace Cloud 
                    Identity Service.</para></listitem>
                    <listitem><para>User account locked or disabled. An Identity administrator can use the Unlock user account operation to restore 
                    account access.</para></listitem>
                    </itemizedlist></para></wadl:doc>
            <representation mediaType="application/xml" element="identity:access"/>
            <representation mediaType="application/json"/>
        </response>
        
        <response status="403">
                <wadl:doc title="User Disabled" xmlns="http://docbook.org/ns/docbook">User account has been disabled.
                </wadl:doc>
                <representation mediaType="application/xml" element="identity:userDisabled"/>
                <representation mediaType="application/json"/>
        </response>
        
        <response status="500">
            <wadl:doc title="serviceFault" xmlns="http://docbook.org/ns/docbook"/>
            <representation mediaType="application/xml" element="identity:serviceFault"/>
            <representation mediaType="application/json"/>
        </response> &postPutFaults; 
    </method>

    <method name="GET" id="validateToken">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Validate Token">
            <para role="shortdesc">Verify that the specified token is valid, 
                and owned by the specified tenant.</para>
            
            <para>In the <code>/tokens/{tokenId}</code> path, valid tokens exist and
                invalid tokens do not. For application development, make sure that the client submitting the Validate token 
                request can handle an ItemNotFound (<code>404</code>) error for an invalid token.</para>
            <para>If the operation is successful, rerun the tenant credentials to return the permissions 
                relevant to a particular client.</para>
            <tip>
                <para>
                    Administrators can use this call to return information about an impersonator:
                    a Racker performing operations on behalf of a user. 
                </para>
                <para>
                    For information about how an impersonator can use a validated token,
                    see <link xlink:href="Impersonation_Calls.html"></link>. 
                </para>
            </tip>
        </wadl:doc>
        <request>
            <param xmlns="http://wadl.dev.java.net/2009/02" name="belongsTo" style="query" required="false" type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>Validate that a token has the specified tenant in scope.</para>
                </wadl:doc>
            </param>
            <!-- Impersonator samples show how RAX-AUTH extension can request token for impersonator 
            but 
            2012-03-19 Itari Ighoroje says there is no special request, hide these 
            <representation mediaType="application/xml" >
                <wadl:doc xml:lang="EN" title="Validate Token for Impersonation Request: XML">
                    <xsdxt:code href="../common/samples/Impersonator.xml" />
                </wadl:doc>
            </representation>
            <representation mediaType="application/json" >
                <wadl:doc xml:lang="EN" title="Validate Token for Impersonation Request: JSON">
                    <xsdxt:code href="../common/samples/Impersonator.json" />
                </wadl:doc>
            </representation>
            
                 Impersonator samples show how RAX-AUTH extension can request token for impersonator -->
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:access">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/validatetoken.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/validatetoken.json"/>
                </wadl:doc>
            </representation>
            <!-- Validate Token Response samples show how RAX-AUTH extension can describe impersonator -->
            <representation mediaType="application/xml">
                <wadl:doc xml:lang="EN" title="Validate Token for Impersonation Response: XML">
                    <xsdxt:code href="../common/samples/ValidateTokenResponse.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN" title="Validate Token for Impersonation Response: JSON">
                    <xsdxt:code href="../common/samples/ValidateTokenResponse.json"/>
                </wadl:doc>
            </representation>
            <!-- Validate Token Response samples validating a Racker token -->
            <representation mediaType="application/xml">
                <wadl:doc xml:lang="EN" title="Validate Token for Racker Response: XML">
                    <xsdxt:code href="../common/samples/ValidateRackerTokenResponse.xml" security="internal"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN" title="Validate Token for Racker Response: JSON">
                    <xsdxt:code href="../common/samples/ValidateRackerTokenResponse.json" security="internal"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="HEAD" id="checkToken">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Check Token">
            <para role="shortdesc">Check that a token is valid and that it belongs to a
                particular tenant (abbreviated response).</para>
            <para>
                Determine whether the specified token is valid. If the optional, <literal>belongsTo</literal> parameter is specified.</para>
        </wadl:doc>
        <response status="200 203"/> &commonFaults; &getFaults; </method>
    
    <method name="DELETE" id="revokeToken">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Revoke Token">
            <para role="shortdesc">Revoke token.</para>
            <para>This call revokes a token, returning code <code>204</code>. if successful
                and <code>404</code> if token in URI is invalid. </para>
        </wadl:doc>
        
        <!-- no request or response body-->
        
        <response status="204"/>&commonFaults; &getFaults;</method>

    <!-- Create user with full payload 
    This is a customized call that is designed to help Service administrators add users with all required characteristics.
    The role parameter has a special tenantId attribute that allows a new tenantId to be created and associated with the new user.
    -->
    <method id="admin-addUser" name="POST">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Create user">
            <para role="shortdesc">
                Creates a Rackspace Cloud account user.
            </para>
            <para>
                Users that have the <parameter>identity:service-admin</parameter> or 
                <parameter>identity:admin</parameter> role can use the Create user operation 
                to add a sub-user (<code>identity:default</code>) to a Rackspace Cloud account. 
                Administrators can add up to 100 users to an account. 
            </para>
            <warning xmlns="http://docbook.org/ns/docbook">
                <para>Account sub-users created using the Add user operation can only access Rackspace Cloud resources through the API. 
                    Only the Administrator user can access the account from the Cloud Control panel. The Administrator 
                    user is assigned when the Rackspace Cloud account is created during the Rackspace signup process.
                </para>
            </warning>
            <para>In the Create user request, include the required values for the user name, email, and 
                initial account status 
                (<parameter>enabled=true</parameter> or <parameter>enabled=false</parameter>) attributes.</para>
            <para>Users inherit the domain and defaultRegion associated with the Rackspace Cloud account. They 
                also inherit group membership.  If you want to override a default value, include the new 
                value in the Create user request.</para>
            <para>You can also include values for optional attributes such as password and role. 
            Review the following details for additional information about specifying optional attributes.</para>
            <para>
                <variablelist>
                    <varlistentry>
                        <term>password</term>
                        <listitem>
                            <para>Use this parameter to specify an initial password for the user.  
                            If you don't specify a password, &CIS; automatically generates one and 
                            returns it in the response. Make note of the password, 
                            so you can give it to the user. After the user is created, 
                            the password cannot be retrieved by any means.</para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>defaultRegion</term>
                        <listitem>
                            <para xmlns="http://docbook.org/ns/docbook">
                                Specify this attribute to override the default region assigned to the user. 
                                Users can change their default region by using the 
                                <link xlink:href="POST_admin-updateUser__userId__User_Calls.html">
                                    Update User</link> API operation, but they can only change it to a region that is listed in the 
                                service catalog for the Cloud Servers service.
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>roles</term>
                        <listitem>
                            <para>
                                Use the roles attribute to assign a user one or more roles other than the default role (<parameter>identity:default</parameter>). 
                                You can also associate the user with a new tenant by specifying a new alphanumeric 
                                <parameter>tenantId</parameter> attribute in the <parameter>role</parameter> element. You cannot specify 
                                an existing an id for an existing tenant.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>
            </para>
            </wadl:doc>
        <wadl:doc xmlns="http://docbook.org/ns/docbook"  xml:lang="EN">     
            <note>
                <para>If you attempt to add a user who already exists, an <errorcode>HTTP error 409</errorcode> results.</para>
            </note>
        </wadl:doc>
        <request>
            <representation mediaType="application/xml" element="identity:user" >
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/UserWithFullPayloadRequest.xml" />
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="RAX-AUTH:defaultRegion" style="plain"
                    type="xsd:string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Specify the default region for the user: <parameter>DFW</parameter>, <parameter>IAD</parameter>, 
                    <parameter>HKG</parameter>, or <parameter>SYD</parameter>.                  
                    </para></wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="RAX-AUTH:domainId" style="plain"
                    type="xsd:string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"><para>To assign the user to a domain,
                        specify the domain ID. If you don't know the domain ID, use the Get domains operation to 
                        list the available domains.</para>
                    </wadl:doc>
                </param>
                    <param xmlns="http://wadl.dev.java.net/2009/02" name="name" style="plain"
                        type="xsd:string" required="true">
                        <wadl:doc
                        xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The name to assign to the user. Specify a value that 
                           meets the following criteria:
                            <itemizedlist>
                                <listitem><para>Start with an alpha character.</para></listitem>
                                <listitem><para>Minimum length: 1 characcter</para></listitem>
                                <listitem><para>Can contain upper and lowercase charcaters.</para></listitem>
                                <listitem><para>Can contain any of the following special characters:  &#x002E;, (period), &#x002D; (hyphen), &#x0040; ,  &#x005F; (underscore)</para></listitem>
                            
                        </itemizedlist></para></wadl:doc>
                    </param>
                    <param xmlns="http://wadl.dev.java.net/2009/02" name="email" style="plain"
                        type="xsd:string" required="true">
                        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">The user
                            email.</wadl:doc>
                    </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="enabled" style="plain"
                    type="xsd:bool" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">Indicates whether
                        the user is enabled (true) or disabled (false).</wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="OS-KSADM:password" style="plain"
                    type="xsd:string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"><para>Specify a password string that meets the following criteria:
                        <itemizedlist>
                            <listitem><para>Length must be at least 8 characters; no maximum</para></listitem>
                            <listitem><para>Includes at least one uppercase and one lower case character</para></listitem>
                            <listitem><para>Can include special characters.</para></listitem>
                            <listitem><para>Password cannot begin with a space.</para></listitem>
                        </itemizedlist>                     
                    </para></wadl:doc>
                </param>
                    <param xmlns="http://wadl.dev.java.net/2009/02" name="roles" style="plain"
                        type="identity:RoleList" required="false">
                        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                            <para>The roles object assigns the user roles. For each role, specify the name of an existing role using the <parameter>role</parameter> 
                                element with the <parameter>name</parameter> attribute.</para>
                            <para>You can also specify a <parameter>tenantId</parameter> attribute to assign a role to a new tenant container.</para>
                            <para>See the XML and JSON request examples for the correct syntax. You can only specify a new <parameter>tenantId</parameter> in this field.</para>
                            </wadl:doc>
                    </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="RAX-KSGRP:groups" style="plain"
                    type="xsd:string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>This object defines the groups the user belongs to. For each group,
                            specify the <parameter>RAX-KSGRP:group</parameter> element with the   
                            <parameter>name</parameter> attribute. See the XML and JSON request 
                            examples for the correct syntax.
                        </para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="RAX-KSQA:secretQA" style="plain"
                    type="xsd:string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"><para>This object specifies   
                        the secret <parameter>question</parameter> and <parameter>answer</parameter> attributes that 
                        can be used to verify the identity of the user.</para>
                    </wadl:doc>
                </param>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/UserWithFullPayloadRequest.json" />
                </wadl:doc>
            </representation>
        </request>
        <response status="201">
            <param name="Location" style="header" type="xsd:string" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <para>Location to the URI of the newly created user</para></wadl:doc>
            </param>
            <representation mediaType="application/xml" element="identity:user" >
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/UserWithFullPayloadResponse.xml" />
                </wadl:doc>
            </representation>
            <representation mediaType="application/json" >
                <wadl:doc xml:lang="EN">
                    <xsdxt:code href="../common/samples/UserWithFullPayloadResponse.json" />
                </wadl:doc>
            </representation>
        </response>
        &commonFaults;
        &postPutFaults;
    </method>
    <!--User Operations-->

    <method name="GET" id="admin-listUsers">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List users">
            <para role="shortdesc">Lists users.</para>
            <para>This operation returns a users object that lists information for each 
                user, which includes email, user name, userId, and account configuration settings.
            <itemizedlist>
                <listitem>
                    <para>
                        If this request is issued by a user holding the admin role (<code>identity:user-admin</code>),
                        it returns a list of all users for the tenant. To find a single user, include the <parameter>name</parameter> in the request.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        If this request is issued by a user holding the user role (<code>identity:default</code>),
                        the operation only returns information about the user's account.
                    </para>
                </listitem>
                <listitem>
                    <para>To find the user with the authority to modify account permissions, refer
                        to <link xlink:href="GET_getUserAdmin_v2.0_admins_User_Calls.html">"Get User Admin."</link>
                    </para>
                </listitem>
            </itemizedlist></para>
        </wadl:doc>
        <request>
            <param xmlns="http://wadl.dev.java.net/2009/02" name="name" style="query" type="xsd:string" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>Specify the user name to look up.</para>
                </wadl:doc>
            </param>
            <param xmlns="http://wadl.dev.java.net/2009/02" name="email" style="query" type="xsd:string" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>User email address.</para>
                </wadl:doc>
            </param>
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:users">
                <wadl:doc xml:lang="EN">
                    <xsdxt:code href="../common/samples/users.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN">
                    <xsdxt:code href="../common/samples/users.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    
    
    <method name="GET" id="admin-getUserById">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get User by ID">
            <para role="shortdesc">Get detailed account information for a specific user, by userid.</para>
            <para>
                This request returns the following information for each account associated with the specified user ID: 
                email address, user name, user ID, status, default region, and domain id.</para>
            <note>
                <para>
                    If this request is issued by  a user holding the admin role (<code>identity:user-admin</code>),
                    the specific user's information is returned only if that user is associated with the same tenant as the 
                    requester's <code>user-admin</code> token.
                </para>
                <para>If this request is issued by a user holding the user role (<code>identity:default</code>), 
                    information is returned for only the requester. 
                </para>
            </note>
        </wadl:doc>
        <response status="200 203">
            <!-- Pull in shared response parameters by using entity from common.ent file -->
            <representation mediaType="application/xml" element="identity:user">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get user by id: XML response">
                    <xsdxt:code href="../common/samples/user.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json" element="identity:user">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get user by id: json response">
                    <xsdxt:code href="../common/samples/user.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

<!--  Added email as query parameter on List users 
    <method name="GET" id="admin-getUserByEmail">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get user information by email">
            <para role="shortdesc">Get detailed information about a specific user, by
                user email.</para>
            <para>This request returns the following information for 
                all accounts with the specified user email address: email address, name,
                user ID, status, domain, creation date, update date, default region, and domain id.</para>
            <para>Default region, indicated by <code>defaultRegion</code>, associates this
                user with a specific regional data center: typical values include DFW, ORD and LON. A blank value is also
                acceptable, indicating that no default region has been assigned for this user. If a default region has been
                assigned and a service in this user's service catalog is available in multiple regions, API service requests
                are managed in the <code>defaultRegion</code>. 
                </para>
            <note>
                <para>
                    If this request is issued by  a user holding the admin role (<code>identity:user-admin</code>),
                    the specific user's information is returned only if that user is associated with the same tenant as the 
                    requester's <code>user-admin</code> token.
                </para>
                <para>If this request is issued by a user holding the user role (<code>identity:default</code>), 
                    information is returned for only the requester. 
                </para>
            </note>
        </wadl:doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:user">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get user by email: XML response">
                    <xsdxt:code href="../common/samples/userbyemailresponse.xml"/>
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="RAX-AUTH:defaultRegion" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Provides the ID for the default regional data center associated with the user account, if one exists.
                            Sample values include: <code>DFW</code>, <code>ORD</code>, or <code>LON</code>.</para> 
                        <para xmlns="http://www.w3.org/1999/xhtml">If a user account is associated with a default region, and the service catalog is available in 
                            multiple regions, service requests are directed to the region specified by <code>defaultRegion</code>. 
                            For example of services available in multiple regions, see 
                            <link xlink:href="Sample_Request_Response-d1e64.html">Sample Authentication Request and Response</link></para>
                        
                        <para>
                            Use the <link xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_updateUser_v2.0_users__userId__.html">"Update user"</link> 
                            API operation to add, remove, or update the defaultRegion setting on an account. 
                        </para>               
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="RAX-AUTH:domainID" style="plain" type="xsd:string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Returns the ID for the domain associated with the user account if one exists. 
                        </para>
                        <para>
                            A domain ID associates the user with a specific domain. The association can be 
                            established during account creation and update operations.
                        </para>
                        <para>
                            A domain establishes an administrative boundary for a customer and a container for customer tenants (accounts) and users.
                            Generally, the <code>domainId</code> value matches the value associated with the primary tenant ID 
                            for the &CLOUD; account.
                        </para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="username" style="plain" type="xsd:string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            The name of the user on the account. 
                        </para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="email" style="plain" type="xsd:string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Returns the email address on the user account if one has been defined.</para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="enabled" style="plain" type="boolean" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                            Indicates whether the user can authenticate to the &CIS;. If <code>enabled="false"</code>,
                            the user cannot authenticate. Typically, the <code>enabled</code> setting is set 
                            and stored by a back-end system integrated with &CIS;. To restore account access, 
                            work with the &CIS; System and user administrators to resolve any issues on the account.
                        </para>
                    </wadl:doc>
                </param>
            </representation>
            <representation mediaType="application/json" element="identity:user">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get user by email: json response">
                    <xsdxt:code href="../common/samples/userbyemailresponse.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
        -->
    
    <!-- Update a user -->
    <method name="POST" id="admin-updateUser">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Update user information and password">
            <para role="shortdesc">Update user information and password.</para>
            <para>The Update user operation acts upon the user specified by <parameter>userId</parameter>. Before you update 
                a user account, use the <link xlink:href="GET_getUserById_users_User_Calls.html">Get user by id</link> operation 
                to verify that the user name, email account, and status associated with 
                <parameter>userId</parameter> match the account you want to update.</para>
            
            <para>Only include those user data elements that you wish to modify in the request body. 
                For example, if you only need to update the user's email, for example, don't include 
                the other body parameters like <parameter>id</parameter>, 
                <parameter>enabled</parameter>, or <parameter>rax-auth:domainId</parameter>.
            </para>
            <note xmlns="http://docbook.org/ns/docbook">
                <itemizedlist>
                    <listitem>
                        <para>Users who hold the admin role can update users who hold the user role (<code>identity:default</code>) or
                            the admin role (<code>identity:user-admin</code>) for the same tenant. </para>
                </listitem>
                <listitem>
                    <para>Administrators can change the default region for another user, but the new value must be 
                        one of the regions listed for a Cloud Compute endpoint in the service catalog.</para>
                </listitem>
                <listitem>
                    <para>Administrators can change a user default region, but the new value must be 
                        one of the regions listed for a Cloud Compute endpoint in the service catalog.</para>
                </listitem>
                </itemizedlist>
            </note>
        </wadl:doc>
        <request>
            <representation mediaType="application/xml" element="identity:user">
                <wadl:doc xml:lang="EN" title="Update user request: XML">
                    <xsdxt:code href="../common/samples/updateuser.xml"/>
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="id" style="plain"
                    type="xsd:string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">The user
                        ID.</wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="name" style="plain"
                    type="xsd:string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">The user
                        name. The first character of the name must be an alpha character.</wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="email" style="plain"
                    type="xsd:string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">The user
                        email.</wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="enabled" style="plain"
                    type="xsd:boolean" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">Indicates whether
                        the user is enabled (true) or disabled (false). Users cannot update the 
                        <parameter>enabled</parameter> status on their own account.</wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="region" type="xsd:string" style="plain">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The region the user is assigned to. Must be one of the regions available in the service catalog.                   
                        </para>
                    </wadl:doc>
                </param>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="password" type="xsd:string" style="plain">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A password string that meets the following criteria:
                            <itemizedlist>
                                <listitem><para>Length must be at least 8 characters; no maximum</para></listitem>
                                <listitem><para>Includes at least one uppercase and one lower case character</para></listitem>
                                <listitem><para>Can include special characters.</para></listitem>
                                <listitem><para>Password cannot begin with a space.</para></listitem>
                            </itemizedlist>                     
                        </para>
                    </wadl:doc>
                </param>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN" title="Update user request: JSON">
                    <xsdxt:code href="../common/samples/updateuser.json"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/xml">
                <wadl:doc xml:lang="EN" title="Update user password request: XML">
                    <xsdxt:code href="../common/samples/userupdatepw.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN" title="Update user password request: JSON">
                    <xsdxt:code href="../common/samples/userupdatepw.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/xml" element="identity:user">
                <wadl:doc xml:lang="EN">
                    <xsdxt:code href="../common/samples/user.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN">
                    <xsdxt:code href="../common/samples/user.json"/>
                </wadl:doc>
            </representation>
        </response>&commonFaults; &postPutFaults; &getFaults; </method>
    
    <!-- Delete a user-->
    <method name="DELETE" id="admin-deleteUser">
        <wadl:doc  xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Deletes a user">
            <para role="shortdesc">Deletes a user.</para>
            <para>
            This operation is available only to users that have the admin role (<code>identity:user-admin</code>).
            Using the admin role, you can delete a user who holds the user role (<code>identity:default</code>) 
            for the same tenant.</para>
            <para>To delete a user, specify the user ID in the request. If you know the
                user name but not id, use the List users operation to look up account information by name.</para>
            <warning>
                <para>Don’t delete the wrong user! Before submitting the Delete request, use the List users or 
                Get user by id operation to review the user account information and confirm that you are working with the correct account.</para></warning>
        </wadl:doc>
        <response status="204"/> &commonFaults; &getFaults; </method>
    
    <!-- Add user credentials -->
    
    <method name="POST" id="admin-addUserCredential">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Adds an API key credential">
            <para role="shortdesc">Adds an API credential to a specified user account.</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/xml" element="apiKeyCredentials">
                <wadl:doc xml:lang="EN"
                    xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/xml" element="apiKeyCredentials">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
                </wadl:doc>
            </representation>
        </response>
        &commonFaults;
        &postPutFaults;
        &getFaults;
    </method>
    
    <!-- List user credentials -->
    <method name="GET" id="admin-listCredentials">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook" title="List Credentials">
            <para role="shortdesc">
                List credentials.
            </para>
            <para>List credentials.</para>
        </wadl:doc>
        
<!-- Hiding credentials limit and marker fields, until all credentials can be listed.  
        <request>
            <param name="marker" style="query" required="false" type="xsd:string">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"> Allows us to page through list of users. </wadl:doc>
            </param>
            <param name="limit" style="query" required="false" type="xsd:int">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"> Allows us to set size of page when paging through list of users. </wadl:doc>
            </param>
        </request>
    -->    
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:credentials">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/credentialswithapikey.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/credentialswithapikey.json"/>
                </wadl:doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    
    <!-- Manage user's API key -->
    
    <method name="GET" id="admin-getUserCredential">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get user API key credentials">
            <para role="shortdesc">Get user credentials.</para>
            <para>To list API key credentials for a specified user, include the userid in the request. If you don't know the id, 
                you can use the  <link xlink:href="GET_admin-getUserByName_v2.0_users_User_Calls.html"/> operation to find it.
            </para>
        </wadl:doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="apiKeyCredentials">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
                </wadl:doc>
            </representation>
        </response>
        &commonFaults;
        &getFaults;
    </method>
    
    <method name="POST" id="admin-updateUserCredential">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Update user API key credentials">
            <para role="shortdesc">Update user credentials.
            </para>
            <para>
                An API key is a credential; you can update a user's API key with this call.
                To add a credential to a user, include the userid in the request. If you don't know the id, 
                you can use the  <link xlink:href="GET_admin-getUserByName_v2.0_users_User_Calls.html"/> operation to find it.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/xml" element="apiKeyCredentials">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/xml" element="apiKeyCredentials">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"
                    xml:lang="EN">
                    <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
                </wadl:doc>
            </representation>
        </response>
        &commonFaults;
        &postPutFaults;
        &getFaults;
    </method>
    
    <method name="DELETE" id="admin-deleteUserCredential">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Delete user API key credentials">
            <para role="shortdesc">Delete user credentials.
            </para>
            <para>
                An API key is a credential; you can delete a user's API key with this call.
                To delete a credential from a user, specify the user ID in the request.
                If you know the user name but not the ID, use                  
                <link xlink:href="GET_admin-getUserByName_v2.0_users_User_Calls.html"/>
                 to                   
                obtain complete identifying information about the user.
            </para>
        </wadl:doc>
        <response status="204"/>
        &commonFaults;
        &postPutFaults;
        &getFaults;
    </method>
   
    <!-- Reset a user's API key -->
    <method id="admin-resetUserAPIKeyCredentials" name="POST">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Reset API key credentials">
            <para role="shortdesc"> Reset a user's API Key.</para>para>
            <para>We recommend that you routinely reset passwords and API keys. 
                This API key reset operation returns the new API key for the user account. 
                Unlike updating the password, the API key reset does not revoke existing 
                tokens. Administrators can use the Revoke Token operation to invalidate 
                the token for a user.</para>
        </wadl:doc>
        <response status="200">
            <wadl:doc title="OK" xmlns="http://docbook.org/ns/docbook"><para>The request succeeded.</para></wadl:doc>
            <representation mediaType="application/xml" xml:lang="EN" element="capi:element">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/ResetAPIKey.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/ResetAPIKey.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; &postPutFaults; </method>

    <!-- Tenant Operations -->

    <method name="GET" id="listTenants">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get Tenants">
            <para>Get a list of tenants.</para>
            <para>This call must be authenticated, so a valid <code>X-Auth-Token</code>
                must be passed in as a header. The operation returns a list of tenants for which the supplied token provides
                access. </para>
            <xsdxt:samples>
                <xsdxt:sample xmlns="http://docs.rackspace.com/api" title="Get Tenants Request with X-Auth-Token">
                    <xsdxt:code href="../common/samples/tenants-request.txt" language="text"/>
                </xsdxt:sample>
            </xsdxt:samples>
        </wadl:doc>
        <!-- omit Marker and Limit rows from Get Tenants Request Parameters table
        <request>
            <param xmlns="http://wadl.dev.java.net/2009/02" name="marker" style="query" required="false" type="xsd:string"/>
            <param xmlns="http://wadl.dev.java.net/2009/02" name="limit" style="query" required="false" type="xsd:int"/>
        </request>
        -->
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenants">
                <wadl:doc xmlns="http://docbook.org/ns/docbook"  xml:lang="EN">
                    <xsdxt:code href="../common/samples/tenants.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/tenants.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    
    <method name="GET" id="getTenantByName">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get Tenant by Name">
            <para role="shortdesc">Return detailed information about a tenant, by name.</para>
            <para>This request returns the following information for the specified tenant name:
                the tenant ID, name, description, and status.</para>
        </wadl:doc>
        <request>
                <param xmlns="http://wadl.dev.java.net/2009/02" name="name" style="template" type="xsd:string" required="true"/>
            
        </request>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenant">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/tenant.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/tenant.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="GET" id="getTenantById">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Get Tenant by ID">
            <para role="shortdesc"> Return detailed information about a tenant, by ID. </para>
            <para>This request returns identifying information about the tenant with the
                specified tenant ID. Identifying information includes the tenant's ID, name, description, and status. </para>
        </wadl:doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenant">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/tenant.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/tenant.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
    <method name="GET" id="listEndpointsForToken">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List Endpoints for Token">
            <para role="shortdesc">Return a list of endpoints associated with a specific
                token. </para>
            <para>This call returns a list of endpoints associated with a specific token.
                Like the service catalog returned by a successful authentication, you can use this list of endpoints as the
                basis of a list of the services available to this user. </para>
            <para>For more information and examples, see 
                <link xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">"Sample Authentication Request and Response"</link>.</para>
        </wadl:doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:endpoints">
                <wadl xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/endpoints.xml"/>
                </wadl>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code href="../common/samples/endpoints.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <method name="GET" id="listRolesForUserOnTenant">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List Roles for User on Tenant">
            <para role="shortdesc">List roles for a specified user on a specified tenant.</para>
            <para>This operation returns a list of roles for a specified user within a
                specified tenant. The list of roles excludes any global roles associated with this user.</para>
            <para>Users and tenants are specified by their unique ID. If you do not know the tenant or user ID, 
                you can use the Get user by name and Get tenant by name operations to retrieve the value.</para>
        </wadl:doc>
        <response status="200 203">
            <representation mediaType="application/xml" element="identity:roles">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/roles.xml"/>
                </wadl:doc>
            </representation>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../common/samples/roles.json"/>
                </wadl:doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>
</application>
