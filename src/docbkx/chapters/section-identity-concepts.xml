<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % common SYSTEM "../../common/common.ent">
%common;
]>
<section 
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="Identity-Concpts">
    <title>Identity concepts</title>
    <para>Review the following key concepts to learn how &CIS;  helps you login and gain access to
        &CLOUD; services. </para>

    <variablelist>
        <varlistentry>
            <term><emphasis role="bold">User</emphasis></term>
            <listitem>
                <para>A user is a digital representation of a person, system, or service that uses
                    &CLOUD; services. Users have credentials and can be assigned tokens. They can
                    present this information to the &CIS; or other &CLOUD; services to confirm
                    identity and verify permission to access the requested system resources. </para>
                <para>
                    Users can also be assigned to a tenant or region so that they inherit a set of 
                    access rights and privileges automatically, based on the tenant or region configuration.
                </para>
                
                <para>In the &CLOUD; Users are represented as accounts created for specific
                    individuals. When a user is created, the &CIS; assigns a user type and a default
                    role automatically, based on the &CIS; system configuration. The user type and role determine the 
                    resources and capabilities available to the user.</para>
                <para>See the following links for more information: 
                    <itemizedlist>
                    <listitem>
                        <para>
                            <link xlink:href="Role_Based_Access_Control-d1e808.html#Account-Users-d1e910">Identity Service, admin, and user roles</link>
                        </para>
                    </listitem>
                        
                    <listitem condition="admin">
                            <para>
                                <link xlink:href="section_assign_roles_3.html">Assigning roles to account
                                    users</link></para>
                        
                        </listitem>
                   </itemizedlist>
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold"
                >Authentication</emphasis></term>
            <listitem>
                <para>The act of passing in <glossterm baseform="Credentials-d1e03">credentials</glossterm>, confirming an identity, and returning a token
                    representation of the verified identity.</para>
                <para>In the &CLOUD;, you authenticate by submitting a <command>POST tokens</command> API request with
                    valid credentials to the &CIS; endpoint. Credentials are typically a user name
                    and API key. However, other types of credentials can be accepted based on
                    service, tenant, or user account configuration.</para>
                <para>In response to valid credentials, the service returns an authentication token
                    and a service catalog with information about the &CLOUD; resources available for
                    use. In subsequent requests to the &CIS; or other &CLOUD; service <glossterm>endpoint</glossterm>. 
                    user includes the authentication token in the request as proof of identity,
                    rights, and privileges to complete the requested operation. </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Credentials</emphasis></term>
            <listitem>
                <para>Any kind of information that can be used to verify an identity. For the &CIS;,
                    credentials include these types of information: <itemizedlist spacing="compact">
                        <listitem>
                            <para>a matching user name and password</para>
                        </listitem>
                        <listitem>
                            <para>a matching user name and API key</para>
                        </listitem>
                        <listitem>
                            <para>a unique token issued to you</para>
                        </listitem>
                        <listitem>
                            <para>secret question and answer</para>
                        </listitem>
                        <listitem>
                            <para>verified cell phone number or email address</para>
                        </listitem>
                    </itemizedlist>
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Authentication token</emphasis></term><listitem>
                <para>An authentication token is an encrypted string returned by
                    the Identity service when you submit an authentication request with valid
                    credentials. Each time that you submit an API request, you include this authentication 
                    token. Because the token expires after 24 hours, you must generate a new token once 
                    each day. The token stores information about a suer's credentials and, optionally, user 
                    identity information, as well as a time stamp and a digital signature. If necessary, 
                    administrators and users can invalidate a token before it expires by submitting a Revoke token 
                    API request. 
                </para>
                <para security="internal" condition="admin">The Identity service issues different types of tokens based on the 
                    authentication method.
                <itemizedlist>
                    <listitem><para>Provisioned user tokens are issued to users who authenticate with their Rackspace Cloud credentials.</para></listitem>
                    <listitem><para>Racker tokens are issued to Rackspace employees that authenticate with their SSO ID and RSA credentials.</para></listitem>
                    <listitem><para>Impersonation tokens are issued to authorized Rackspace employees or Identity service administrators so they can assume 
                        the identity of a provisioned or federated user.</para></listitem>
                    <listitem><para>Federated tokens issued to external providers like MyRack that establish their identity through SAML assertion.</para></listitem>
                    <listitem><para>Passcode tokens are issued to users who authenticate using a mobile phone associated with their account.</para></listitem>
                    <listitem><para>OTP passcode tokens are issued to users who authenticate using an OTP device associated with their account.</para></listitem>
                    <listitem><para>Multi-factor authentication tokens are issued to provisioned users who are required to set up multi-factor authentication 
                        on their account in order to access a Cloud service.</para></listitem>
                </itemizedlist></para>

                <para>Authentication tokens expire in 24 hours. The expiration 
                    date is included in the authentication response. If necessary, Administrators 
                    and users can revoke a token before its expiration date. After a token expires or becomes invalid, 
                the Identity service returns 404 errors until you authenticate again.</para>
                <para condition="admin">Authentication tokens expire after 24 hours. An
                    administrator or process can revoke a token before its expiration, if necessary.
                    To get a new token, you must submit another authentication request to the
                    &CIS;.</para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Authorization</emphasis></term>
            <listitem>
                <para>The act of verifying the capability of an authenticated user, system, or
                    process to perform an action on a set of resources. In the &CLOUD;, the Identity
                    service provides centralized authorization to ensure that clients have
                    appropriate access to information and information processing capabilities based
                    on &CIS; roles such as system administrator and user administrator. The &CLOUD;
                    also supports Role-based access control which defines product-specific roles to
                    authorize capabilities at the service-level.</para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term xml:id
                ="role_def"><emphasis role="bold">Role</emphasis></term>
            <listitem>
                <para>A common security construct for assigning a specific set of access
                    rights and privileges to a user or group of users. Service administrators can
                    create named roles, configure the rights and privileges for each role, and
                    manage the role without updating individual user or group accounts assigned to
                    the role.</para>
                <para>Roles can be assigned to users, groups, or tenants automatically based on
                    organization security policy. An administrator can view, manage, and update role
                    configuration and assignments as required. Only &CIS; service administrators can
                    create new roles.</para>
                <para>&CIS; supports two types of roles:<variablelist>
                    <varlistentry>
                        <term><emphasis role="bold">Global roles</emphasis></term>
                        <listitem>
                            <para>A role that defines access and permissions across all
                                Rackspace Cloud services, the administrator or observer roles for
                                example.</para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term><emphasis role="bold">Product roles</emphasis></term>     
                        <listitem>
                            <para>A role that defines the functions a user can perform for a
                                particular Rackspace Cloud service.</para>
                        </listitem>
                    </varlistentry>
                </variablelist></para>
                <para>A user with a specific role inherits the rights and privileges associated with
                    the role. In &PRODNAME;, the authentication <glossterm baseform="Token-d1e13">token</glossterm> issued to a user includes the list of roles associated
                    with the user. The service configuration determines how user roles are
                    interpreted. For example, a role that grants access to certain resources or
                    capabilities within one service can grant access to completely different
                    resources and capabilities on different service.</para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Role-based access control (RBAC)</emphasis></term>
            <listitem>
                <para>RBAC is method to restrict service access to only authorized users. RBAC
                    allows customers to specify who has access to resources and capabilities within
                    their cloud deployment, based on roles defined by Rackspace. For example, an
                    administrator can use RBAC to manage access to Cloud Servers as well as the
                    permissions to complete operations such as adding and deleting servers after
                    access has been granted.</para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Tenant</emphasis></term>
            <listitem>
                <para>A tenant represents logical groups of users to which resources are assigned.
                    In the &CLOUD;, tenants allow service providers to organize computing and
                    storage resources without assigning them to user accounts directly. For example,
                    Virtual machines (Cloud Servers) and containers (Cloud Files) are assigned to
                    tenants, not to users directly.</para>
                <para>Depending on the service provider, a tenant can map to a customer, account,
                    organization, or project.   Identity users can be part of more than one tenant,
                    and can have different types of roles defined for each tenant that they're a
                    part of. The Identity service allows you to create and delete tenants, and also
                    enable and disable them. </para>
                <para>&CLOUD; has two tenant types: <itemizedlist>
                        <listitem>
                            <para>The Mosso tenant (Mosso account) includes the collection of
                                resources commonly associated with services such as Cloud Servers,
                                Cloud Database, Cloud Load Balancers.</para>
                        </listitem>
                        <listitem>
                            <para>The NAST tenant (NAST account) includes the collection of
                                resources commonly associated with Cloud Files and Cloud Files
                                CDN.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>Typically, a service provider determines how tenants are defined and used. The
                    &CIS; allows service administrators to create, delete, enable, and disable
                    tenants. Service administrators can also assign users and groups to one or more
                    tenants. Because each tenant can have its own role configuration, user can have
                    different roles, or different rights and privileges for the same role on
                    different tenants.</para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Domain</emphasis></term>
            <listitem>
                <para>A domain establishes an administrative boundary for a customer and a container for a customer's tenants (accounts) and users.
                    Individual domains can represent an individual, company, or operator-owned space within the Rackspace Cloud Identity service.</para>
                <para>In the Identity service API, the domain resource provides a mechanism to expose administratve actitivites directly to system 
                    users. Specifically, an Identity service administrator can create tenants, users, and groups within a domain and 
                    assign roles to users and groups. User administrators that have domain administrator capabilities can view and manage 
                    the domain associated with their Rackspace Cloud account. 
                </para>
            </listitem>
        </varlistentry>
        <varlistentry audience="client">
            <term><emphasis role="bold">Service</emphasis></term>
            <listitem>
                <para>A service is a logical name for the internal and external capabilities
                    provided by a &CLOUD; platform or product component. A service provides one or
                    more <glossterm baseform="endpoint">endpoints</glossterm> through which users can
                    access resources and perform operations. Examples of Rackspace Cloud services include 
                    Identity, Servers, Load Balancers, and Files.</para>
            </listitem>
        </varlistentry>
        <varlistentry condition="admin">
            <term><emphasis role="bold">Service</emphasis></term>
            <listitem>
                <para>The &CLOUD; allows Service providers to define services, which are logical
                    names for parts of Rackspace Cloud that provide internal or external
                    capabilities, for things such as identity services, as well as compute and
                    storage services. A service provides one or more endpoints through which users
                    can access resources and perform operations. Examples of Rackspace Cloud
                    services include Identity, Servers, Load Balancers, and Files.</para>
                <para>In the &CLOUD;, any system or product that is integrated with the &CIS; API
                    service is considered a service.</para>
            </listitem>
        </varlistentry>
        <varlistentry condition="client">
            <term><emphasis role="bold">Endpoint</emphasis></term>
            <listitem>
                <para>A network accessible address, usually described by a URL, where a service can
                    be accessed.</para>
                <para>Various &CLOUD; systems can query the &CIS; for the service endpoints required
                    to complete processes and operations. Users must know the URL for a service
                    endpoint in order to use the service.  An API might offer several regional endpoints for a single API.</para>
                <para>The Rackspace Identity service provides one global endpoint: <link
                    xlink:href="&ENDPOINT-IdentityGlobal;">&ENDPOINT-IdentityGlobal;</link>. To see
                    supported API versions, browse to the endpoint URL. To use a specific version of the
                    API, append the version number to the global endpoint: 
                    <link xlink:href="&ENDPOINT-IdentityVersion;">&ENDPOINT-IdentityVersion;</link>.</para>
                <para>To get the URLs for other service endpoints, submit an authentication request
                    with valid credentials to a &CIS; endpoint. If authentication is successful, the
                    Identity service returns an authentication token and a service catalog with
                    information about available services, including the endpoints to access each service.
                    <note>
                        <para>In the &CIS; version 1.1 implementation, an endpoint is known as a <literal>baseURL</literal>.</para>
                    </note></para>
                <para condition="admin">Service developers can create and delete endpoints. They can also customize
                    service availability and operation by defining multiple, region-specific service
                    endpoints for the same &CLOUD; service.</para>
            </listitem>
        </varlistentry>
        <varlistentry condition="admin">
            <term><emphasis role="bold">Endpoint Template</emphasis></term>
            <listitem>
                <para>Endpoint templates provide Cloud Service providers with a method to manage API
                    service endpoints that apply to many or all tenants without having to add each
                    endpoint on each tenant manually. For example, a Service developer can define a
                    global endpoint template that is automatically included in the Service catalog
                    for all tenants authorized to use that service. The endpoint template also
                    specifies the URLs for the internal, administrative, and public endpoints that
                    provide access to the service.</para>
                <para>See <link xlink:href="Endpoint_Template_Calls.html">Endpoint template calls</link> for
                    detailed information. </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Service catalog</emphasis></term>
            <listitem>
                <para>Taken as a whole, all the service endpoints defined in Keystone are
                    the service catalog, defining all services available to OpenStack. </para>
                <para>The service catalog is the list of all the service endpoints defined in the
                    Identity service that represent all services available in the Rackspace Cloud.
                    When a user authenticates, the authentication response returns a subset of the
                    service catalog that includes only the services and information that the user
                    can access. Each service listing includes at least one endpoint URL to access
                    the service along with other information relevant to using the service such as
                    region, tenant, and version information. Typically, the service catalog returned
                    to a System administrator has additional information that might not be visible
                    to User administrators or Account sub-users.</para>
                    
                    <para>All the services in the catalog are available as long as you have a valid
                    authentication token.</para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><emphasis role="bold">Federated identity management</emphasis></term>
            <listitem>
                <para>Federated identity management (FIdM) consists of a 
                    set of policies, practices and protocols that can be used to manage authentication and authorization 
                    of users, processes, and devices across organizations. The goal of identity federation is to enable users 
                    of one domain to securely access data or systems of another domain seamlessly by passing an authentication token that 
                    was issued by a trusted Identity Provider. Unlike SSO, which allows users 
                    to log in to different domains with the same credentials, federated identity management allows users to authenticate through a 
                    trusted Identity provider and gain access to any systems that accept identity information from that provider without providing 
                    any additional authentication.
                </para>
            </listitem>
        </varlistentry>
    </variablelist>   
</section>
