<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
<!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v2.0/">
<!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v2.0/">
]>
<!-- if role="api-reference" on this chapter, generate table of all operations here -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xml:id="Admin_API_Service_Developer_Operations" version="5.0" role="api-reference">
	<title>API Operations for Service Developers</title>
	<para>The operations described in this chapter allow service
		developers to get and validate access tokens and to manage
		users, tenants, roles, and service endpoints. </para>
	<para>Most calls to the Admin API require authentication. Two kinds
		of calls are available without authentication: 
		<itemizedlist spacing="compact">
			<listitem>
				<para>
					calls to discover the service, such as obtaining version info, the WADL contract, and the API Developer Guide
				 </para>
			</listitem>
			<listitem>
				<para>
					calls to authenticate and get a token</para>
			</listitem>
		</itemizedlist>
		</para>
	<para> Authentication is performed by passing a valid token in the
			<code>X-Auth-Token</code> header of the client's request to the identity service. 
		If the identity service verifies that the token has (or belongs to a
		user that has) the <code>Admin</code> role, then administrator-level functions can be performed. </para>
	<note>
		<para>
			For information about obtaining a service account, contact 
			<link xlink:href="mailto:auth@lists.rackspace.com">auth@lists.rackspace.com</link>. 
		</para>
	</note>
	<table rules="all">
		<caption>Authentication Header</caption>
		<thead>
			<tr>
				<td>Header Type</td>
				<td>Name</td>
				<td>Sample Value</td>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>HTTP/1.1 Request</td>
				<td><code>X-Auth-Token</code></td>
				<td>
					<para> aaaaaaaa-1111-bbbb-2222-ccc3d5e6f777</para>
				</td>
			</tr>
		</tbody>
	</table>
	<para>
		Some of these operations require only the core authentication service API v2.0 and some require extensions to the API.
		If an extension is required, it is included in Rackspace's implementation of the Keystone Identity Service; 
		issuing the calls as described here will use API extensions as needed.
	</para>
	<section xml:id="User_Calls">
		<title>Users</title>
		<para>The operations described in this section allow service developers to manage users.</para>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>OS-KSADM</code> and <code>RAX-KSKEY</code> extensions to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<!--- this section comes from 3 WADLs: core identity-admin + extensions OS-KSADM-admin & RAX-KSKEY-admin -->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list users -->
			<wadl:resource href="OS-KSADM-admin.wadl#users">
				<wadl:method href="listUsers"/>
			</wadl:resource>
			<!-- list user -->
			<wadl:resource href="identity-admin.wadl#users">
				<wadl:method href="getUserByName"/>
			</wadl:resource>
			<wadl:resource href="identity-admin.wadl#userid">
				<wadl:method href="getUserById"/>
			</wadl:resource>
			<!-- add user -->
			<wadl:resource href="OS-KSADM-admin.wadl#users">
				<wadl:method href="addUser"/>
			</wadl:resource>
			<!-- update user -->
			<wadl:resource href="OS-KSADM-admin.wadl#userById">
				<wadl:method href="updateUser"/>
			</wadl:resource>
			<!-- delete user -->
			<wadl:resource href="OS-KSADM-admin.wadl#userById">
				<wadl:method href="deleteUser"/>
			</wadl:resource>
			<!-- add API key credential -->
			<wadl:resource href="OS-KSADM-admin.wadl#userCredentials">
				<wadl:method href="addUserCredential"/>
			</wadl:resource>
			<!-- list API key credentials -->
			<wadl:resource href="OS-KSADM-admin.wadl#userCredentials">
				<wadl:method href="listCredentials"/>
			</wadl:resource>
			<!-- update API key credentials -->
			<wadl:resource href="RAX-KSKEY-admin.wadl#userCredentialsByType">
				<wadl:method href="updateUserCredential"/>
			</wadl:resource>
			<!-- delete API key credentials -->
			<wadl:resource href="RAX-KSKEY-admin.wadl#userCredentialsByType">
				<wadl:method href="deleteUserCredential"/>
			</wadl:resource>
			<!-- get user's API key credentials -->
			<wadl:resource href="RAX-KSKEY-admin.wadl#userCredentialsByType">
				<wadl:method href="getUserCredential"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	<section xml:id="Group_Calls">
		<title>Groups</title>
		<para>The operations described in this section allow service developers to manage groups.</para>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>RAX-GRPADM</code> and <code>RAX-KSGRP</code> extensions to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="RAX-GRPADM.wadl#groups"/>
			<wadl:resource href="RAX-GRPADM.wadl#group"/>
			<wadl:resource href="RAX-KSGRP-admin.wadl#user-groups-RAX-KSGRP">
				<wadl:method href="listUserGroups"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#user"/>
			<wadl:resource href="RAX-GRPADM.wadl#users"/>			
<!--	   Specification of individual calls as below (& the rest of this doc) 
		   fails here (BUILD SUCCESS, but calls missing from generated output);
		   above, include all from 4 resources in RAX-GRPADM, plus 1 from RAX-KSGRP 
				<wadl:resource href="RAX-GRPADM.wadl#groups">
				<wadl:method href="listGroups"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#groups">
				<wadl:method href="addGroup"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#group">
				<wadl:method href="getGroup"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#group">
				<wadl:method href="updateGroup"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#group">
				<wadl:method href="deleteGroup"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#groups">
				<wadl:method href="getUsersForGroup"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#groups">
				<wadl:method href="addUserToGroup"/>
			</wadl:resource>
			<wadl:resource href="RAX-KSGRP-admin.wadl#user-groups-RAX-KSGRP">
				<wadl:method href="listUserGroups"/>
			</wadl:resource>
			<wadl:resource href="RAX-GRPADM.wadl#groups">
				<wadl:method href="removeUserFromGroup"/>
			</wadl:resource>
-->		</wadl:resources>
	</section>
	<section xml:id="Role_Calls">
		<title>Roles</title>
		<para>The operations described in this section allow service developers to manage roles.</para>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>OS-KSADM</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list roles -->
			<wadl:resource href="OS-KSADM-admin.wadl#roles">
				<wadl:method href="listRoles"/>
			</wadl:resource>
			<!-- add a role globally -->
			<wadl:resource href="OS-KSADM-admin.wadl#roles">
				<wadl:method href="addRole"/>
			</wadl:resource>
			<!-- get a global role -->
			<wadl:resource href="OS-KSADM-admin.wadl#roleId">
				<wadl:method href="getRole"/>
			</wadl:resource>
			<!-- delete a role globally -->
			<!-- notes say
				"No access allowed. Deleting a global role can mess up a lot of stuff.
				We need to wait until identity:admin and identity:service-admin roles
				are separated fully (post migration) before doing this."
			<wadl:resource href="OS-KSADM-admin.wadl#RoleId">
				<wadl:method href="deleteRole"/>
			</wadl:resource>
			-->
			<!-- add a global role to a user -->
			<wadl:resource href="OS-KSADM-admin.wadl#userRoleById">
				<wadl:method href="addUserRole"/>
			</wadl:resource>
			<!-- delete a global role from a user -->
			<wadl:resource href="OS-KSADM-admin.wadl#userRoleById">
				<wadl:method href="deleteUserRole"/>
			</wadl:resource>
			<!-- list global roles available to a user -->
			<wadl:resource href="identity-admin.wadl#userRoles">
				<wadl:method href="listUserGlobalRoles"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	<section xml:id="Token_Calls">
		<title>Tokens</title>
		<para>The operations described in this section allow service developers to get and validate access tokens.</para>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>RAX-GA</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="identity-admin.wadl#tokens">
				<!-- authenticate -->
				<wadl:method href="authenticate"/>
			</wadl:resource>
			<wadl:resource href="identity-admin.wadl#tokenById">
				<!-- validate token -->
				<wadl:method href="validateToken">
				<wadl:doc>
					<tip>
						<para>
							You can use this call to return information about an impersonator:
							a Racker performing operations on behalf of a user. 
						</para>
						<para>
							For information about how an impersonator can use a validated token,
							see the "Impersonations" section. 
						</para>
					</tip>
				</wadl:doc>
				</wadl:method>
				<!-- check token -->
				<wadl:method href="checkToken"/>
			</wadl:resource>
			<wadl:resource href="identity-admin.wadl#endpointsForToken">
				<!-- list endpoints for token -->
				<wadl:method href="listEndpointsForToken"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	<section xml:id="Tenant_Calls">
		<title>Tenants</title>
		<para>The operations described in this section allow service developers to manage tenants.</para>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="identity-admin.wadl#tenants">
				<wadl:method href="listTenants"/>
				<wadl:method href="getTenantByName"/>
			</wadl:resource>
			<wadl:resource href="identity-admin.wadl#tenantById">
				<wadl:method href="getTenantById"/>
			</wadl:resource>
			<wadl:resource href="identity-admin.wadl#userRolesForTenant">
				<wadl:method href="listRolesForUserOnTenant">
					<wadl:doc>
						<important>
							<para>
								Rackspace's implementation of the OpenStack Identity Service v2.0 is currently in BETA status
								and does not yet support <code>GET v2.0/tenants/{tenantId}/users/{user_id}/roles</code>; 
								a 501 (notImplemented) will be issued in response to this request.
							</para>
						</important>
					</wadl:doc>
				</wadl:method>
			</wadl:resource>
		</wadl:resources>
	</section>
	<section security="writeronly" xml:id="Endpoint_Template_Calls">
		<!-- Endpoint Template Operations are only in Global Auth for now; omit from Cloud Auth book -->
		<title>Endpoint Templates</title>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>OS-KSCATALOG</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpointTemplates">
				<wadl:method href="endpointTemplates"/>
			</wadl:resource>
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpointTemplates">
				<wadl:method href="addEndpointTemplate"/>
			</wadl:resource>
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpointTemplateId">
				<wadl:method href="getEndpointTemplate"/>
			</wadl:resource>
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpointTemplateId">
				<wadl:method href="deleteEndpointTemplate"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	<section security="writeronly" xml:id="Endpoint_Calls">
		<!-- Endpoint Operations are only in Global Auth for now; omit from Cloud Auth book -->
		<title>Endpoints</title>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>OS-KSCATALOG</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpoints">
				<wadl:method href="listEndpoints"/>
			</wadl:resource>
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpoints">
				<wadl:method href="addEndpoint"/>
			</wadl:resource>
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpoint">
				<wadl:method href="getEndpoint"/>
			</wadl:resource>
			<wadl:resource href="OS-KSCATALOG-admin.wadl#endpoint">
				<wadl:method href="deleteEndpoint"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	<section xml:id="Secret_Calls">
		<title>Secret Questions and Answers</title>
		<para>The operations described in this section allow service developers to manage 
			the secret questions and answers that can be used for emergency validation of a user's identity.</para>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>RAX-KSQA</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="RAX-KSQA-admin.wadl#secretqa">
				<wadl:method href="getUserSecretQA"/>
			</wadl:resource>
			<wadl:resource href="RAX-KSQA-admin.wadl#secretqa">
				<wadl:method href="updateUserSecretQA"/>
			</wadl:resource>
		</wadl:resources>
	</section>
	<section xml:id="Impersonation_Calls">
		<!-- Impersonation Calls are scheduled for production 2012-04-15 -->
		<title>Impersonations</title>
		<para>The operations described in this section allow service developers to manage Rackers' impersonations of 
			users for diagnostic purposes.</para>
		<figure xml:id="impersonation">
			<title>A Racker issues one POST with the Racker's own credentials, then a second POST identifying the user to be impersonated.
			</title>
			<!-- this is Joe Savak's drawing, 
				from https://docs.google.com/a/rackspace.com/drawings/d/1fxomVwZRmWT6NYmhTFwj9VMfQ_NQHLVfpfb6474xnoc/edit 
			    PNG fits PDF width at 55%, 710x477
			-->
			<mediaobject>
				<imageobject>
					<imagedata fileref="../figures/auth-impersonation.png" format="PNG" align="center" />
				</imageobject>
			</mediaobject>
		</figure>
		<note>
			<para> 
				Some of the functionality described in this section is
				provided by the <code>RAX-GA</code> extension to the
				core Identity API. 
				You can learn more about API extensions at
				<link xlink:href="https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/">
					https://github.com/openstack/identity-api/tree/master/openstack-identity-api/src/docbkx/</link>.  
			</para>
		</note>
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="RAX-GA.wadl#impersonation-tokens">
				<wadl:method href="impersonateUser">
				<wadl:doc>
					<tip>
						<para>
							For information about how an impersonator can obtain a validated token,
							see the "Validate Token" section. 
						</para>
					</tip>
				</wadl:doc>
				</wadl:method>
			</wadl:resource>
		</wadl:resources>
	</section>
</chapter>